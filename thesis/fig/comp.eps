%!PS-Adobe-3.0 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: comp.pdf
%%Creator: Adobe Acrobat 11.0.1
%%For: Lu
%%CreationDate: 2013/7/5, 23:11:22
%%BoundingBox: 96 248 539 535
%%HiResBoundingBox: 0 0 595.2200 842
%%CropBox: 0 0 595.2200 842
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1053 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Acrobat Elements 7.0.5 (Windows)"
   xmp:CreatorTool="PScript5.dll Version 5.2"
   xmp:ModifyDate="2013-07-05T23:10:13+08:00"
   xmp:CreateDate="2013-07-05T23:10:13+08:00"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:9fd94fbd-1aef-435f-b4eb-6f0325909f6e"
   xmpMM:InstanceID="uuid:ff7f7a13-e0c9-4b2b-b800-ad587255bc05">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">&lt;6464637270CAB5D1E9BDE1B9FB2E786C7378&gt;</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>lin</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [595.22 842 ] >> setpagedevice
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 842 li
595.22 842 li
595.22 0 li
cp
clp
50.52 603 mo
544.8 603 li
544.8 279.96 li
50.52 279.96 li
cp
false sop
0 0 0 0 cmyk
f
157.08 516.6 mo
447.72 516.6 li
447.72 517.68 li
157.08 517.68 li
cp
157.08 492 mo
447.72 492 li
447.72 493.08 li
157.08 493.08 li
cp
157.08 467.52 mo
447.72 467.52 li
447.72 468.6 li
157.08 468.6 li
cp
157.08 442.92 mo
447.72 442.92 li
447.72 444 li
157.08 444 li
cp
157.08 418.44 mo
447.72 418.44 li
447.72 419.52 li
157.08 419.52 li
cp
157.08 393.84 mo
447.72 393.84 li
447.72 394.92 li
157.08 394.92 li
cp
157.08 369.36 mo
447.72 369.36 li
447.72 370.44 li
157.08 370.44 li
cp
157.08 344.88 mo
447.72 344.88 li
447.72 345.96 li
157.08 345.96 li
cp
157.08 320.28 mo
447.72 320.28 li
447.72 321.36 li
157.08 321.36 li
cp
.54342 .453223 .427253 0 cmyk
f
156.6 541.56 mo
157.68 541.56 li
157.68 308.52 li
156.6 308.52 li
cp
f
152.4 541.08 mo
157.08 541.08 li
157.08 542.16 li
152.4 542.16 li
cp
152.4 516.6 mo
157.08 516.6 li
157.08 517.68 li
152.4 517.68 li
cp
152.4 492 mo
157.08 492 li
157.08 493.08 li
152.4 493.08 li
cp
152.4 467.52 mo
157.08 467.52 li
157.08 468.6 li
152.4 468.6 li
cp
152.4 442.92 mo
157.08 442.92 li
157.08 444 li
152.4 444 li
cp
152.4 418.44 mo
157.08 418.44 li
157.08 419.52 li
152.4 419.52 li
cp
152.4 393.84 mo
157.08 393.84 li
157.08 394.92 li
152.4 394.92 li
cp
152.4 369.36 mo
157.08 369.36 li
157.08 370.44 li
152.4 370.44 li
cp
152.4 344.88 mo
157.08 344.88 li
157.08 345.96 li
152.4 345.96 li
cp
152.4 320.28 mo
157.08 320.28 li
157.08 321.36 li
152.4 321.36 li
cp
f
157.08 542.16 mo
447.72 542.16 li
447.72 541.08 li
157.08 541.08 li
cp
f
156.6 541.56 mo
157.68 541.56 li
157.68 546.36 li
156.6 546.36 li
cp
157.68 541.56 mo
cp
198.12 541.56 mo
199.2 541.56 li
199.2 546.36 li
198.12 546.36 li
cp
199.2 541.56 mo
cp
239.64 541.56 mo
240.72 541.56 li
240.72 546.36 li
239.64 546.36 li
cp
240.72 541.56 mo
cp
281.16 541.56 mo
282.24 541.56 li
282.24 546.36 li
281.16 546.36 li
cp
282.24 541.56 mo
cp
322.68 541.56 mo
323.76 541.56 li
323.76 546.36 li
322.68 546.36 li
cp
323.76 541.56 mo
cp
364.2 541.56 mo
365.28 541.56 li
365.28 546.36 li
364.2 546.36 li
cp
365.28 541.56 mo
cp
405.72 541.56 mo
406.8 541.56 li
406.8 546.36 li
405.72 546.36 li
cp
406.8 541.56 mo
cp
447.24 541.56 mo
448.32 541.56 li
448.32 546.36 li
447.24 546.36 li
cp
f
159.6 452.28 mo
154.92 447.6 li
154.92 452.28 mo
159.6 447.6 li
.713222 .423743 .0417182 0 cmyk
f
159.12 452.64 mo
154.56 447.96 li
155.28 447.24 li
159.96 451.8 li
cp
154.56 451.8 mo
159.12 447.24 li
159.96 447.96 li
155.28 452.64 li
.728786 .437995 .0408331 0 cmyk
f
167.76 425.28 mo
163.08 420.6 li
163.08 425.28 mo
167.76 420.6 li
.713222 .423743 .0417182 0 cmyk
f
167.4 425.64 mo
162.72 420.96 li
163.56 420.24 li
168.24 424.8 li
cp
162.72 424.8 mo
167.4 420.24 li
168.24 420.96 li
163.56 425.64 li
.728786 .437995 .0408331 0 cmyk
f
176.16 412.56 mo
171.48 407.88 li
171.48 412.56 mo
176.16 407.88 li
.713222 .423743 .0417182 0 cmyk
f
175.8 412.92 mo
171.12 408.36 li
171.96 407.52 li
176.52 412.2 li
cp
171.12 412.2 mo
175.8 407.52 li
176.52 408.36 li
171.96 412.92 li
.728786 .437995 .0408331 0 cmyk
f
184.44 402 mo
179.76 397.32 li
179.76 402 mo
184.44 397.32 li
.713222 .423743 .0417182 0 cmyk
f
183.96 402.36 mo
179.4 397.8 li
180.12 396.96 li
184.8 401.64 li
cp
179.4 401.64 mo
183.96 396.96 li
184.8 397.8 li
180.12 402.36 li
.728786 .437995 .0408331 0 cmyk
f
192.84 392.88 mo
188.16 388.32 li
188.16 392.88 mo
192.84 388.32 li
.713222 .423743 .0417182 0 cmyk
f
192.36 393.36 mo
187.8 388.68 li
188.52 387.84 li
193.2 392.52 li
cp
187.8 392.52 mo
192.36 387.84 li
193.2 388.68 li
188.52 393.36 li
.728786 .437995 .0408331 0 cmyk
f
201 384.12 mo
196.32 379.56 li
196.32 384.12 mo
201 379.56 li
.713222 .423743 .0417182 0 cmyk
f
200.64 384.6 mo
195.96 379.92 li
196.8 379.08 li
201.36 383.76 li
cp
195.96 383.76 mo
200.64 379.08 li
201.36 379.92 li
196.8 384.6 li
.728786 .437995 .0408331 0 cmyk
f
209.28 380.76 mo
204.6 376.08 li
204.6 380.76 mo
209.28 376.08 li
.713222 .423743 .0417182 0 cmyk
f
208.8 381.12 mo
204.24 376.56 li
204.96 375.72 li
209.64 380.4 li
cp
204.24 380.4 mo
208.8 375.72 li
209.64 376.56 li
204.96 381.12 li
.728786 .437995 .0408331 0 cmyk
f
217.68 374.64 mo
213 370.08 li
213 374.64 mo
217.68 370.08 li
.713222 .423743 .0417182 0 cmyk
f
217.2 375.12 mo
212.64 370.44 li
213.36 369.6 li
218.04 374.28 li
cp
212.64 374.28 mo
217.2 369.6 li
218.04 370.44 li
213.36 375.12 li
.728786 .437995 .0408331 0 cmyk
f
225.84 375.96 mo
221.16 371.28 li
221.16 375.96 mo
225.84 371.28 li
.713222 .423743 .0417182 0 cmyk
f
225.48 376.32 mo
220.8 371.64 li
221.64 370.92 li
226.2 375.48 li
cp
220.8 375.48 mo
225.48 370.92 li
226.2 371.64 li
221.64 376.32 li
.728786 .437995 .0408331 0 cmyk
f
234.24 375.36 mo
229.56 370.8 li
229.56 375.36 mo
234.24 370.8 li
.713222 .423743 .0417182 0 cmyk
f
233.88 375.84 mo
229.2 371.16 li
230.04 370.32 li
234.6 375 li
cp
229.2 375 mo
233.88 370.32 li
234.6 371.16 li
230.04 375.84 li
.728786 .437995 .0408331 0 cmyk
f
242.52 375.96 mo
237.84 371.28 li
237.84 375.96 mo
242.52 371.28 li
.713222 .423743 .0417182 0 cmyk
f
242.04 376.32 mo
237.48 371.64 li
238.2 370.92 li
242.88 375.48 li
cp
237.48 375.48 mo
242.04 370.92 li
242.88 371.64 li
238.2 376.32 li
.728786 .437995 .0408331 0 cmyk
f
250.92 375.6 mo
246.24 370.92 li
246.24 375.6 mo
250.92 370.92 li
.713222 .423743 .0417182 0 cmyk
f
250.44 375.96 mo
245.88 371.28 li
246.6 370.56 li
251.28 375.24 li
cp
245.88 375.24 mo
250.44 370.56 li
251.28 371.28 li
246.6 375.96 li
.728786 .437995 .0408331 0 cmyk
f
259.08 380.4 mo
254.4 375.72 li
254.4 380.4 mo
259.08 375.72 li
.713222 .423743 .0417182 0 cmyk
f
258.72 380.76 mo
254.04 376.2 li
254.88 375.36 li
259.44 380.04 li
cp
254.04 380.04 mo
258.72 375.36 li
259.44 376.2 li
254.88 380.76 li
.728786 .437995 .0408331 0 cmyk
f
267.48 382.68 mo
262.8 378.12 li
262.8 382.68 mo
267.48 378.12 li
.713222 .423743 .0417182 0 cmyk
f
267.12 383.16 mo
262.44 378.48 li
263.28 377.64 li
267.84 382.32 li
cp
262.44 382.32 mo
267.12 377.64 li
267.84 378.48 li
263.28 383.16 li
.728786 .437995 .0408331 0 cmyk
f
275.76 383.28 mo
271.08 378.6 li
271.08 383.28 mo
275.76 378.6 li
.713222 .423743 .0417182 0 cmyk
f
275.28 383.64 mo
270.72 378.96 li
271.44 378.24 li
276.12 382.92 li
cp
270.72 382.92 mo
275.28 378.24 li
276.12 378.96 li
271.44 383.64 li
.728786 .437995 .0408331 0 cmyk
f
284.16 388.32 mo
279.48 383.64 li
279.48 388.32 mo
284.16 383.64 li
.713222 .423743 .0417182 0 cmyk
f
283.68 388.68 mo
279.12 384 li
279.84 383.28 li
284.52 387.84 li
cp
279.12 387.84 mo
283.68 383.28 li
284.52 384 li
279.84 388.68 li
.728786 .437995 .0408331 0 cmyk
f
292.32 394.32 mo
287.64 389.64 li
287.64 394.32 mo
292.32 389.64 li
.713222 .423743 .0417182 0 cmyk
f
291.96 394.68 mo
287.28 390.12 li
288.12 389.28 li
292.68 393.96 li
cp
287.28 393.96 mo
291.96 389.28 li
292.68 390.12 li
288.12 394.68 li
.728786 .437995 .0408331 0 cmyk
f
300.6 396.72 mo
295.92 392.04 li
295.92 396.72 mo
300.6 392.04 li
.713222 .423743 .0417182 0 cmyk
f
300.12 397.08 mo
295.56 392.4 li
296.28 391.56 li
300.96 396.24 li
cp
295.56 396.24 mo
300.12 391.56 li
300.96 392.4 li
296.28 397.08 li
.728786 .437995 .0408331 0 cmyk
f
309 405.6 mo
304.32 400.92 li
304.32 405.6 mo
309 400.92 li
.713222 .423743 .0417182 0 cmyk
f
308.52 405.96 mo
303.96 401.4 li
304.68 400.56 li
309.36 405.24 li
cp
303.96 405.24 mo
308.52 400.56 li
309.36 401.4 li
304.68 405.96 li
.728786 .437995 .0408331 0 cmyk
f
317.16 406.44 mo
312.48 401.88 li
312.48 406.44 mo
317.16 401.88 li
.713222 .423743 .0417182 0 cmyk
f
316.8 406.92 mo
312.12 402.24 li
312.96 401.4 li
317.52 406.08 li
cp
312.12 406.08 mo
316.8 401.4 li
317.52 402.24 li
312.96 406.92 li
.728786 .437995 .0408331 0 cmyk
f
325.56 413.64 mo
320.88 408.96 li
320.88 413.64 mo
325.56 408.96 li
.713222 .423743 .0417182 0 cmyk
f
325.2 414 mo
320.52 409.44 li
321.36 408.6 li
325.92 413.28 li
cp
320.52 413.28 mo
325.2 408.6 li
325.92 409.44 li
321.36 414 li
.728786 .437995 .0408331 0 cmyk
f
333.72 423.12 mo
329.16 418.44 li
329.16 423.12 mo
333.72 418.44 li
.713222 .423743 .0417182 0 cmyk
f
333.36 423.48 mo
328.68 418.8 li
329.52 418.08 li
334.2 422.76 li
cp
328.68 422.76 mo
333.36 418.08 li
334.2 418.8 li
329.52 423.48 li
.728786 .437995 .0408331 0 cmyk
f
342.12 426.48 mo
337.56 421.8 li
337.56 426.48 mo
342.12 421.8 li
.713222 .423743 .0417182 0 cmyk
f
341.76 426.84 mo
337.08 422.28 li
337.92 421.44 li
342.6 426.12 li
cp
337.08 426.12 mo
341.76 421.44 li
342.6 422.28 li
337.92 426.84 li
.728786 .437995 .0408331 0 cmyk
f
350.4 434.52 mo
345.72 429.84 li
345.72 434.52 mo
350.4 429.84 li
.713222 .423743 .0417182 0 cmyk
f
350.04 434.88 mo
345.36 430.32 li
346.2 429.48 li
350.76 434.16 li
cp
345.36 434.16 mo
350.04 429.48 li
350.76 430.32 li
346.2 434.88 li
.728786 .437995 .0408331 0 cmyk
f
358.8 441.36 mo
354.12 436.68 li
354.12 441.36 mo
358.8 436.68 li
.713222 .423743 .0417182 0 cmyk
f
358.44 441.72 mo
353.76 437.04 li
354.6 436.32 li
359.16 440.88 li
cp
353.76 440.88 mo
358.44 436.32 li
359.16 437.04 li
354.6 441.72 li
.728786 .437995 .0408331 0 cmyk
f
366.96 443.64 mo
362.4 438.96 li
362.4 443.64 mo
366.96 438.96 li
.713222 .423743 .0417182 0 cmyk
f
366.6 444 mo
361.92 439.44 li
362.76 438.6 li
367.44 443.28 li
cp
361.92 443.28 mo
366.6 438.6 li
367.44 439.44 li
362.76 444 li
.728786 .437995 .0408331 0 cmyk
f
375.36 449.04 mo
370.8 444.36 li
370.8 449.04 mo
375.36 444.36 li
.713222 .423743 .0417182 0 cmyk
f
375 449.4 mo
370.32 444.72 li
371.16 444 li
375.84 448.56 li
cp
370.32 448.56 mo
375 444 li
375.84 444.72 li
371.16 449.4 li
.728786 .437995 .0408331 0 cmyk
f
383.64 455.28 mo
378.96 450.6 li
378.96 455.28 mo
383.64 450.6 li
.713222 .423743 .0417182 0 cmyk
f
383.28 455.64 mo
378.6 450.96 li
379.32 450.24 li
384 454.92 li
cp
378.6 454.92 mo
383.28 450.24 li
384 450.96 li
379.32 455.64 li
.728786 .437995 .0408331 0 cmyk
f
392.04 461.88 mo
387.36 457.2 li
387.36 461.88 mo
392.04 457.2 li
.713222 .423743 .0417182 0 cmyk
f
391.68 462.24 mo
387 457.68 li
387.72 456.84 li
392.4 461.52 li
cp
387 461.52 mo
391.68 456.84 li
392.4 457.68 li
387.72 462.24 li
.728786 .437995 .0408331 0 cmyk
f
400.2 467.4 mo
395.64 462.72 li
395.64 467.4 mo
400.2 462.72 li
.713222 .423743 .0417182 0 cmyk
f
399.84 467.76 mo
395.16 463.2 li
396 462.36 li
400.68 467.04 li
cp
395.16 467.04 mo
399.84 462.36 li
400.68 463.2 li
396 467.76 li
.728786 .437995 .0408331 0 cmyk
f
408.48 476.4 mo
403.8 471.72 li
403.8 476.4 mo
408.48 471.72 li
.713222 .423743 .0417182 0 cmyk
f
408.12 476.76 mo
403.44 472.08 li
404.16 471.36 li
408.84 475.92 li
cp
403.44 475.92 mo
408.12 471.36 li
408.84 472.08 li
404.16 476.76 li
.728786 .437995 .0408331 0 cmyk
f
157.2 360.6 mo
159.48 362.88 li
159.6 362.88 li
159.48 362.88 li
157.2 365.16 li
155.04 362.88 li
154.92 362.88 li
155.04 362.88 li
.260136 .804379 .644221 0 cmyk
f
156.84 360.24 mo
156.72 360.6 li
156.72 359.88 157.8 359.88 157.8 360.6 cv
157.68 360.24 li
159.84 362.52 li
159.48 362.28 li
160.32 362.28 li
160.32 363.48 li
159.48 363.48 li
159.84 363.24 li
157.68 365.52 li
157.8 365.16 li
157.8 366 li
156.72 366 li
156.72 365.16 li
156.84 365.52 li
154.56 363.24 li
155.04 363.48 li
154.92 363.48 li
154.2 363.48 154.2 362.28 154.92 362.28 cv
155.04 362.28 li
154.56 362.52 li
cp
155.4 363.24 mo
155.28 363.36 155.16 363.48 155.04 363.48 cv
154.92 363.48 li
154.92 362.28 li
155.04 362.28 li
155.16 362.28 155.28 362.4 155.4 362.52 cv
157.68 364.68 li
157.8 364.8 157.8 364.92 157.8 365.16 cv
156.72 365.16 li
156.72 364.92 156.72 364.8 156.84 364.68 cv
159.12 362.52 li
159.24 362.4 159.36 362.28 159.48 362.28 cv
159.6 362.28 li
159.6 363.48 li
159.48 363.48 li
159.36 363.48 159.24 363.36 159.12 363.24 cv
156.84 361.08 li
156.72 360.96 156.72 360.84 156.72 360.6 cv
157.8 360.6 li
157.8 360.84 157.8 360.96 157.68 361.08 cv
.26978 .825711 .676448 0 cmyk
f
165.48 360.6 mo
167.64 362.88 li
167.76 362.88 li
167.64 362.88 li
165.48 365.16 li
163.2 362.88 li
163.08 362.88 li
163.2 362.88 li
.260136 .804379 .644221 0 cmyk
f
165.12 360.24 mo
164.88 360.6 li
164.88 359.88 166.08 359.88 166.08 360.6 cv
165.84 360.24 li
168.12 362.52 li
167.64 362.28 li
168.48 362.28 li
168.48 363.48 li
167.64 363.48 li
168.12 363.24 li
165.84 365.52 li
166.08 365.16 li
166.08 366 li
164.88 366 li
164.88 365.16 li
165.12 365.52 li
162.84 363.24 li
163.2 363.48 li
163.08 363.48 li
162.36 363.48 162.36 362.28 163.08 362.28 cv
163.2 362.28 li
162.84 362.52 li
cp
163.68 363.24 mo
163.56 363.36 163.32 363.48 163.2 363.48 cv
163.08 363.48 li
163.08 362.28 li
163.2 362.28 li
163.32 362.28 163.56 362.4 163.68 362.52 cv
165.84 364.68 li
165.96 364.8 166.08 364.92 166.08 365.16 cv
164.88 365.16 li
164.88 364.92 165 364.8 165.12 364.68 cv
167.28 362.52 li
167.4 362.4 167.52 362.28 167.64 362.28 cv
167.76 362.28 li
167.76 363.48 li
167.64 363.48 li
167.52 363.48 167.4 363.36 167.28 363.24 cv
165.12 361.08 li
165 360.96 164.88 360.84 164.88 360.6 cv
166.08 360.6 li
166.08 360.84 165.96 360.96 165.84 361.08 cv
.26978 .825711 .676448 0 cmyk
f
173.88 360.6 mo
176.04 362.88 li
176.16 362.88 li
176.04 362.88 li
173.88 365.16 li
171.6 362.88 li
171.48 362.88 li
171.6 362.88 li
.260136 .804379 .644221 0 cmyk
f
173.52 360.24 mo
173.28 360.6 li
173.28 359.88 174.36 359.88 174.36 360.6 cv
174.24 360.24 li
176.52 362.52 li
176.04 362.28 li
176.88 362.28 li
176.88 363.48 li
176.04 363.48 li
176.52 363.24 li
174.24 365.52 li
174.36 365.16 li
174.36 366 li
173.28 366 li
173.28 365.16 li
173.52 365.52 li
171.24 363.24 li
171.6 363.48 li
171.48 363.48 li
170.76 363.48 170.76 362.28 171.48 362.28 cv
171.6 362.28 li
171.24 362.52 li
cp
172.08 363.24 mo
171.96 363.36 171.72 363.48 171.6 363.48 cv
171.48 363.48 li
171.48 362.28 li
171.6 362.28 li
171.72 362.28 171.96 362.4 172.08 362.52 cv
174.24 364.68 li
174.36 364.8 174.36 364.92 174.36 365.16 cv
173.28 365.16 li
173.28 364.92 173.4 364.8 173.52 364.68 cv
175.68 362.52 li
175.8 362.4 175.92 362.28 176.04 362.28 cv
176.16 362.28 li
176.16 363.48 li
176.04 363.48 li
175.92 363.48 175.8 363.36 175.68 363.24 cv
173.52 361.08 li
173.4 360.96 173.28 360.84 173.28 360.6 cv
174.36 360.6 li
174.36 360.84 174.36 360.96 174.24 361.08 cv
.26978 .825711 .676448 0 cmyk
f
182.04 360.6 mo
184.32 362.88 li
184.44 362.88 li
184.32 362.88 li
182.04 365.16 li
179.88 362.88 li
179.76 362.88 li
179.88 362.88 li
.260136 .804379 .644221 0 cmyk
f
181.68 360.24 mo
181.56 360.6 li
181.56 359.88 182.64 359.88 182.64 360.6 cv
182.52 360.24 li
184.68 362.52 li
184.32 362.28 li
185.16 362.28 li
185.16 363.48 li
184.32 363.48 li
184.68 363.24 li
182.52 365.52 li
182.64 365.16 li
182.64 366 li
181.56 366 li
181.56 365.16 li
181.68 365.52 li
179.4 363.24 li
179.88 363.48 li
179.76 363.48 li
179.04 363.48 179.04 362.28 179.76 362.28 cv
179.88 362.28 li
179.4 362.52 li
cp
180.24 363.24 mo
180.12 363.36 180 363.48 179.88 363.48 cv
179.76 363.48 li
179.76 362.28 li
179.88 362.28 li
180 362.28 180.12 362.4 180.24 362.52 cv
182.52 364.68 li
182.52 364.8 182.64 364.92 182.64 365.16 cv
181.56 365.16 li
181.56 364.92 181.56 364.8 181.68 364.68 cv
183.96 362.52 li
184.08 362.4 184.2 362.28 184.32 362.28 cv
184.44 362.28 li
184.44 363.48 li
184.32 363.48 li
184.2 363.48 184.08 363.36 183.96 363.24 cv
181.68 361.08 li
181.56 360.96 181.56 360.84 181.56 360.6 cv
182.64 360.6 li
182.64 360.84 182.52 360.96 182.52 361.08 cv
.26978 .825711 .676448 0 cmyk
f
190.44 360.6 mo
192.72 362.88 li
192.84 362.88 li
192.72 362.88 li
190.44 365.16 li
188.28 362.88 li
188.16 362.88 li
188.28 362.88 li
.260136 .804379 .644221 0 cmyk
f
190.08 360.24 mo
189.96 360.6 li
189.96 359.88 191.04 359.88 191.04 360.6 cv
190.92 360.24 li
193.08 362.52 li
192.72 362.28 li
193.56 362.28 li
193.56 363.48 li
192.72 363.48 li
193.08 363.24 li
190.92 365.52 li
191.04 365.16 li
191.04 366 li
189.96 366 li
189.96 365.16 li
190.08 365.52 li
187.8 363.24 li
188.28 363.48 li
188.16 363.48 li
187.44 363.48 187.44 362.28 188.16 362.28 cv
188.28 362.28 li
187.8 362.52 li
cp
188.64 363.24 mo
188.52 363.36 188.4 363.48 188.28 363.48 cv
188.16 363.48 li
188.16 362.28 li
188.28 362.28 li
188.4 362.28 188.52 362.4 188.64 362.52 cv
190.92 364.68 li
190.92 364.8 191.04 364.92 191.04 365.16 cv
189.96 365.16 li
189.96 364.92 189.96 364.8 190.08 364.68 cv
192.36 362.52 li
192.48 362.4 192.6 362.28 192.72 362.28 cv
192.84 362.28 li
192.84 363.48 li
192.72 363.48 li
192.6 363.48 192.48 363.36 192.36 363.24 cv
190.08 361.08 li
189.96 360.96 189.96 360.84 189.96 360.6 cv
191.04 360.6 li
191.04 360.84 190.92 360.96 190.92 361.08 cv
.26978 .825711 .676448 0 cmyk
f
198.72 360.6 mo
200.88 362.88 li
201 362.88 li
200.88 362.88 li
198.72 365.16 li
196.44 362.88 li
196.32 362.88 li
196.44 362.88 li
.260136 .804379 .644221 0 cmyk
f
198.36 360.24 mo
198.12 360.6 li
198.12 359.88 199.2 359.88 199.2 360.6 cv
199.08 360.24 li
201.36 362.52 li
200.88 362.28 li
201.72 362.28 li
201.72 363.48 li
200.88 363.48 li
201.36 363.24 li
199.08 365.52 li
199.2 365.16 li
199.2 366 li
198.12 366 li
198.12 365.16 li
198.36 365.52 li
196.08 363.24 li
196.44 363.48 li
196.32 363.48 li
195.6 363.48 195.6 362.28 196.32 362.28 cv
196.44 362.28 li
196.08 362.52 li
cp
196.8 363.24 mo
196.8 363.36 196.56 363.48 196.44 363.48 cv
196.32 363.48 li
196.32 362.28 li
196.44 362.28 li
196.56 362.28 196.8 362.4 196.8 362.52 cv
199.08 364.68 li
199.2 364.8 199.2 364.92 199.2 365.16 cv
198.12 365.16 li
198.12 364.92 198.24 364.8 198.36 364.68 cv
200.52 362.52 li
200.64 362.4 200.76 362.28 200.88 362.28 cv
201 362.28 li
201 363.48 li
200.88 363.48 li
200.76 363.48 200.64 363.36 200.52 363.24 cv
198.36 361.08 li
198.24 360.96 198.12 360.84 198.12 360.6 cv
199.2 360.6 li
199.2 360.84 199.2 360.96 199.08 361.08 cv
.26978 .825711 .676448 0 cmyk
f
206.88 360.6 mo
209.16 362.88 li
209.28 362.88 li
209.16 362.88 li
206.88 365.16 li
204.72 362.88 li
204.6 362.88 li
204.72 362.88 li
.260136 .804379 .644221 0 cmyk
f
206.52 360.24 mo
206.4 360.6 li
206.4 359.88 207.48 359.88 207.48 360.6 cv
207.36 360.24 li
209.52 362.52 li
209.16 362.28 li
210 362.28 li
210 363.48 li
209.16 363.48 li
209.52 363.24 li
207.36 365.52 li
207.48 365.16 li
207.48 366 li
206.4 366 li
206.4 365.16 li
206.52 365.52 li
204.24 363.24 li
204.72 363.48 li
204.6 363.48 li
203.88 363.48 203.88 362.28 204.6 362.28 cv
204.72 362.28 li
204.24 362.52 li
cp
205.08 363.24 mo
204.96 363.36 204.84 363.48 204.72 363.48 cv
204.6 363.48 li
204.6 362.28 li
204.72 362.28 li
204.84 362.28 204.96 362.4 205.08 362.52 cv
207.36 364.68 li
207.36 364.8 207.48 364.92 207.48 365.16 cv
206.4 365.16 li
206.4 364.92 206.4 364.8 206.52 364.68 cv
208.8 362.52 li
208.8 362.4 209.04 362.28 209.16 362.28 cv
209.28 362.28 li
209.28 363.48 li
209.16 363.48 li
209.04 363.48 208.8 363.36 208.8 363.24 cv
206.52 361.08 li
206.4 360.96 206.4 360.84 206.4 360.6 cv
207.48 360.6 li
207.48 360.84 207.36 360.96 207.36 361.08 cv
.26978 .825711 .676448 0 cmyk
f
215.28 360.6 mo
217.56 362.88 li
217.68 362.88 li
217.56 362.88 li
215.28 365.16 li
213.12 362.88 li
213 362.88 li
213.12 362.88 li
.260136 .804379 .644221 0 cmyk
f
214.92 360.24 mo
214.8 360.6 li
214.8 359.88 215.88 359.88 215.88 360.6 cv
215.76 360.24 li
217.92 362.52 li
217.56 362.28 li
218.4 362.28 li
218.4 363.48 li
217.56 363.48 li
217.92 363.24 li
215.76 365.52 li
215.88 365.16 li
215.88 366 li
214.8 366 li
214.8 365.16 li
214.92 365.52 li
212.64 363.24 li
213.12 363.48 li
213 363.48 li
212.28 363.48 212.28 362.28 213 362.28 cv
213.12 362.28 li
212.64 362.52 li
cp
213.48 363.24 mo
213.36 363.36 213.24 363.48 213.12 363.48 cv
213 363.48 li
213 362.28 li
213.12 362.28 li
213.24 362.28 213.36 362.4 213.48 362.52 cv
215.76 364.68 li
215.76 364.8 215.88 364.92 215.88 365.16 cv
214.8 365.16 li
214.8 364.92 214.8 364.8 214.92 364.68 cv
217.2 362.52 li
217.2 362.4 217.44 362.28 217.56 362.28 cv
217.68 362.28 li
217.68 363.48 li
217.56 363.48 li
217.44 363.48 217.2 363.36 217.2 363.24 cv
214.92 361.08 li
214.8 360.96 214.8 360.84 214.8 360.6 cv
215.88 360.6 li
215.88 360.84 215.76 360.96 215.76 361.08 cv
.26978 .825711 .676448 0 cmyk
f
223.56 360.6 mo
225.72 362.88 li
225.84 362.88 li
225.72 362.88 li
223.56 365.16 li
221.28 362.88 li
221.16 362.88 li
221.28 362.88 li
.260136 .804379 .644221 0 cmyk
f
223.08 360.24 mo
222.96 360.6 li
222.96 359.88 224.04 359.88 224.04 360.6 cv
223.92 360.24 li
226.2 362.52 li
225.72 362.28 li
226.56 362.28 li
226.56 363.48 li
225.72 363.48 li
226.2 363.24 li
223.92 365.52 li
224.04 365.16 li
224.04 366 li
222.96 366 li
222.96 365.16 li
223.08 365.52 li
220.92 363.24 li
221.28 363.48 li
221.16 363.48 li
220.44 363.48 220.44 362.28 221.16 362.28 cv
221.28 362.28 li
220.92 362.52 li
cp
221.64 363.24 mo
221.64 363.36 221.4 363.48 221.28 363.48 cv
221.16 363.48 li
221.16 362.28 li
221.28 362.28 li
221.4 362.28 221.64 362.4 221.64 362.52 cv
223.92 364.68 li
224.04 364.8 224.04 364.92 224.04 365.16 cv
222.96 365.16 li
222.96 364.92 223.08 364.8 223.08 364.68 cv
225.36 362.52 li
225.48 362.4 225.6 362.28 225.72 362.28 cv
225.84 362.28 li
225.84 363.48 li
225.72 363.48 li
225.6 363.48 225.48 363.36 225.36 363.24 cv
223.08 361.08 li
223.08 360.96 222.96 360.84 222.96 360.6 cv
224.04 360.6 li
224.04 360.84 224.04 360.96 223.92 361.08 cv
.26978 .825711 .676448 0 cmyk
f
231.96 360.6 mo
234.12 362.88 li
234.24 362.88 li
234.12 362.88 li
231.96 365.16 li
229.68 362.88 li
229.56 362.88 li
229.68 362.88 li
.260136 .804379 .644221 0 cmyk
f
231.48 360.24 mo
231.36 360.6 li
231.36 359.88 232.44 359.88 232.44 360.6 cv
232.32 360.24 li
234.6 362.52 li
234.12 362.28 li
234.96 362.28 li
234.96 363.48 li
234.12 363.48 li
234.6 363.24 li
232.32 365.52 li
232.44 365.16 li
232.44 366 li
231.36 366 li
231.36 365.16 li
231.48 365.52 li
229.32 363.24 li
229.68 363.48 li
229.56 363.48 li
228.84 363.48 228.84 362.28 229.56 362.28 cv
229.68 362.28 li
229.32 362.52 li
cp
230.04 363.24 mo
230.04 363.36 229.8 363.48 229.68 363.48 cv
229.56 363.48 li
229.56 362.28 li
229.68 362.28 li
229.8 362.28 230.04 362.4 230.04 362.52 cv
232.32 364.68 li
232.44 364.8 232.44 364.92 232.44 365.16 cv
231.36 365.16 li
231.36 364.92 231.48 364.8 231.48 364.68 cv
233.76 362.52 li
233.88 362.4 234 362.28 234.12 362.28 cv
234.24 362.28 li
234.24 363.48 li
234.12 363.48 li
234 363.48 233.88 363.36 233.76 363.24 cv
231.48 361.08 li
231.48 360.96 231.36 360.84 231.36 360.6 cv
232.44 360.6 li
232.44 360.84 232.44 360.96 232.32 361.08 cv
.26978 .825711 .676448 0 cmyk
f
240.12 360.6 mo
242.4 362.88 li
242.52 362.88 li
242.4 362.88 li
240.12 365.16 li
237.96 362.88 li
237.84 362.88 li
237.96 362.88 li
.260136 .804379 .644221 0 cmyk
f
239.76 360.24 mo
239.64 360.6 li
239.64 359.88 240.72 359.88 240.72 360.6 cv
240.6 360.24 li
242.76 362.52 li
242.4 362.28 li
243.24 362.28 li
243.24 363.48 li
242.4 363.48 li
242.76 363.24 li
240.6 365.52 li
240.72 365.16 li
240.72 366 li
239.64 366 li
239.64 365.16 li
239.76 365.52 li
237.48 363.24 li
237.96 363.48 li
237.84 363.48 li
237.12 363.48 237.12 362.28 237.84 362.28 cv
237.96 362.28 li
237.48 362.52 li
cp
238.32 363.24 mo
238.2 363.36 238.08 363.48 237.96 363.48 cv
237.84 363.48 li
237.84 362.28 li
237.96 362.28 li
238.08 362.28 238.2 362.4 238.32 362.52 cv
240.6 364.68 li
240.6 364.8 240.72 364.92 240.72 365.16 cv
239.64 365.16 li
239.64 364.92 239.64 364.8 239.76 364.68 cv
242.04 362.52 li
242.04 362.4 242.28 362.28 242.4 362.28 cv
242.52 362.28 li
242.52 363.48 li
242.4 363.48 li
242.28 363.48 242.04 363.36 242.04 363.24 cv
239.76 361.08 li
239.64 360.96 239.64 360.84 239.64 360.6 cv
240.72 360.6 li
240.72 360.84 240.6 360.96 240.6 361.08 cv
.26978 .825711 .676448 0 cmyk
f
248.52 360.6 mo
250.8 362.88 li
250.92 362.88 li
250.8 362.88 li
248.52 365.16 li
246.36 362.88 li
246.24 362.88 li
246.36 362.88 li
.260136 .804379 .644221 0 cmyk
f
248.16 360.24 mo
248.04 360.6 li
248.04 359.88 249.12 359.88 249.12 360.6 cv
249 360.24 li
251.16 362.52 li
250.8 362.28 li
251.64 362.28 li
251.64 363.48 li
250.8 363.48 li
251.16 363.24 li
249 365.52 li
249.12 365.16 li
249.12 366 li
248.04 366 li
248.04 365.16 li
248.16 365.52 li
245.88 363.24 li
246.36 363.48 li
246.24 363.48 li
245.52 363.48 245.52 362.28 246.24 362.28 cv
246.36 362.28 li
245.88 362.52 li
cp
246.72 363.24 mo
246.6 363.36 246.48 363.48 246.36 363.48 cv
246.24 363.48 li
246.24 362.28 li
246.36 362.28 li
246.48 362.28 246.6 362.4 246.72 362.52 cv
249 364.68 li
249 364.8 249.12 364.92 249.12 365.16 cv
248.04 365.16 li
248.04 364.92 248.04 364.8 248.16 364.68 cv
250.44 362.52 li
250.44 362.4 250.68 362.28 250.8 362.28 cv
250.92 362.28 li
250.92 363.48 li
250.8 363.48 li
250.68 363.48 250.44 363.36 250.44 363.24 cv
248.16 361.08 li
248.04 360.96 248.04 360.84 248.04 360.6 cv
249.12 360.6 li
249.12 360.84 249 360.96 249 361.08 cv
.26978 .825711 .676448 0 cmyk
f
256.8 360.6 mo
258.96 362.88 li
259.08 362.88 li
258.96 362.88 li
256.8 365.16 li
254.52 362.88 li
254.4 362.88 li
254.52 362.88 li
.260136 .804379 .644221 0 cmyk
f
256.32 360.24 mo
256.2 360.6 li
256.2 359.88 257.28 359.88 257.28 360.6 cv
257.16 360.24 li
259.44 362.52 li
258.96 362.28 li
259.8 362.28 li
259.8 363.48 li
258.96 363.48 li
259.44 363.24 li
257.16 365.52 li
257.28 365.16 li
257.28 366 li
256.2 366 li
256.2 365.16 li
256.32 365.52 li
254.16 363.24 li
254.52 363.48 li
254.4 363.48 li
253.68 363.48 253.68 362.28 254.4 362.28 cv
254.52 362.28 li
254.16 362.52 li
cp
254.88 363.24 mo
254.88 363.36 254.64 363.48 254.52 363.48 cv
254.4 363.48 li
254.4 362.28 li
254.52 362.28 li
254.64 362.28 254.88 362.4 254.88 362.52 cv
257.16 364.68 li
257.28 364.8 257.28 364.92 257.28 365.16 cv
256.2 365.16 li
256.2 364.92 256.32 364.8 256.32 364.68 cv
258.6 362.52 li
258.72 362.4 258.84 362.28 258.96 362.28 cv
259.08 362.28 li
259.08 363.48 li
258.96 363.48 li
258.84 363.48 258.72 363.36 258.6 363.24 cv
256.32 361.08 li
256.32 360.96 256.2 360.84 256.2 360.6 cv
257.28 360.6 li
257.28 360.84 257.28 360.96 257.16 361.08 cv
.26978 .825711 .676448 0 cmyk
f
265.2 360.6 mo
267.36 362.88 li
267.48 362.88 li
267.36 362.88 li
265.2 365.16 li
262.92 362.88 li
262.8 362.88 li
262.92 362.88 li
.260136 .804379 .644221 0 cmyk
f
264.72 360.24 mo
264.6 360.6 li
264.6 359.88 265.68 359.88 265.68 360.6 cv
265.56 360.24 li
267.84 362.52 li
267.36 362.28 li
268.2 362.28 li
268.2 363.48 li
267.36 363.48 li
267.84 363.24 li
265.56 365.52 li
265.68 365.16 li
265.68 366 li
264.6 366 li
264.6 365.16 li
264.72 365.52 li
262.56 363.24 li
262.92 363.48 li
262.8 363.48 li
262.08 363.48 262.08 362.28 262.8 362.28 cv
262.92 362.28 li
262.56 362.52 li
cp
263.28 363.24 mo
263.28 363.36 263.04 363.48 262.92 363.48 cv
262.8 363.48 li
262.8 362.28 li
262.92 362.28 li
263.04 362.28 263.28 362.4 263.28 362.52 cv
265.56 364.68 li
265.68 364.8 265.68 364.92 265.68 365.16 cv
264.6 365.16 li
264.6 364.92 264.72 364.8 264.72 364.68 cv
267 362.52 li
267.12 362.4 267.24 362.28 267.36 362.28 cv
267.48 362.28 li
267.48 363.48 li
267.36 363.48 li
267.24 363.48 267.12 363.36 267 363.24 cv
264.72 361.08 li
264.72 360.96 264.6 360.84 264.6 360.6 cv
265.68 360.6 li
265.68 360.84 265.68 360.96 265.56 361.08 cv
.26978 .825711 .676448 0 cmyk
f
273.36 360.6 mo
275.64 362.88 li
275.76 362.88 li
275.64 362.88 li
273.36 365.16 li
271.2 362.88 li
271.08 362.88 li
271.2 362.88 li
.260136 .804379 .644221 0 cmyk
f
273 360.24 mo
272.88 360.6 li
272.88 359.88 273.96 359.88 273.96 360.6 cv
273.72 360.24 li
276 362.52 li
275.64 362.28 li
276.48 362.28 li
276.48 363.48 li
275.64 363.48 li
276 363.24 li
273.72 365.52 li
273.96 365.16 li
273.96 366 li
272.88 366 li
272.88 365.16 li
273 365.52 li
270.72 363.24 li
271.2 363.48 li
271.08 363.48 li
270.36 363.48 270.36 362.28 271.08 362.28 cv
271.2 362.28 li
270.72 362.52 li
cp
271.56 363.24 mo
271.44 363.36 271.32 363.48 271.2 363.48 cv
271.08 363.48 li
271.08 362.28 li
271.2 362.28 li
271.32 362.28 271.44 362.4 271.56 362.52 cv
273.72 364.68 li
273.84 364.8 273.96 364.92 273.96 365.16 cv
272.88 365.16 li
272.88 364.92 272.88 364.8 273 364.68 cv
275.28 362.52 li
275.28 362.4 275.52 362.28 275.64 362.28 cv
275.76 362.28 li
275.76 363.48 li
275.64 363.48 li
275.52 363.48 275.28 363.36 275.28 363.24 cv
273 361.08 li
272.88 360.96 272.88 360.84 272.88 360.6 cv
273.96 360.6 li
273.96 360.84 273.84 360.96 273.72 361.08 cv
.26978 .825711 .676448 0 cmyk
f
281.76 360.6 mo
284.04 362.88 li
284.16 362.88 li
284.04 362.88 li
281.76 365.16 li
279.6 362.88 li
279.48 362.88 li
279.6 362.88 li
.260136 .804379 .644221 0 cmyk
f
281.4 360.24 mo
281.28 360.6 li
281.28 359.88 282.36 359.88 282.36 360.6 cv
282.12 360.24 li
284.4 362.52 li
284.04 362.28 li
284.88 362.28 li
284.88 363.48 li
284.04 363.48 li
284.4 363.24 li
282.12 365.52 li
282.36 365.16 li
282.36 366 li
281.28 366 li
281.28 365.16 li
281.4 365.52 li
279.12 363.24 li
279.6 363.48 li
279.48 363.48 li
278.76 363.48 278.76 362.28 279.48 362.28 cv
279.6 362.28 li
279.12 362.52 li
cp
279.96 363.24 mo
279.84 363.36 279.72 363.48 279.6 363.48 cv
279.48 363.48 li
279.48 362.28 li
279.6 362.28 li
279.72 362.28 279.84 362.4 279.96 362.52 cv
282.12 364.68 li
282.24 364.8 282.36 364.92 282.36 365.16 cv
281.28 365.16 li
281.28 364.92 281.28 364.8 281.4 364.68 cv
283.68 362.52 li
283.68 362.4 283.92 362.28 284.04 362.28 cv
284.16 362.28 li
284.16 363.48 li
284.04 363.48 li
283.92 363.48 283.68 363.36 283.68 363.24 cv
281.4 361.08 li
281.28 360.96 281.28 360.84 281.28 360.6 cv
282.36 360.6 li
282.36 360.84 282.24 360.96 282.12 361.08 cv
.26978 .825711 .676448 0 cmyk
f
290.04 360.6 mo
292.2 362.88 li
292.32 362.88 li
292.2 362.88 li
290.04 365.16 li
287.76 362.88 li
287.64 362.88 li
287.76 362.88 li
.260136 .804379 .644221 0 cmyk
f
289.56 360.24 mo
289.44 360.6 li
289.44 359.88 290.52 359.88 290.52 360.6 cv
290.4 360.24 li
292.68 362.52 li
292.2 362.28 li
293.04 362.28 li
293.04 363.48 li
292.2 363.48 li
292.68 363.24 li
290.4 365.52 li
290.52 365.16 li
290.52 366 li
289.44 366 li
289.44 365.16 li
289.56 365.52 li
287.4 363.24 li
287.76 363.48 li
287.64 363.48 li
286.92 363.48 286.92 362.28 287.64 362.28 cv
287.76 362.28 li
287.4 362.52 li
cp
288.12 363.24 mo
288 363.36 287.88 363.48 287.76 363.48 cv
287.64 363.48 li
287.64 362.28 li
287.76 362.28 li
287.88 362.28 288 362.4 288.12 362.52 cv
290.4 364.68 li
290.52 364.8 290.52 364.92 290.52 365.16 cv
289.44 365.16 li
289.44 364.92 289.56 364.8 289.56 364.68 cv
291.84 362.52 li
291.96 362.4 292.08 362.28 292.2 362.28 cv
292.32 362.28 li
292.32 363.48 li
292.2 363.48 li
292.08 363.48 291.96 363.36 291.84 363.24 cv
289.56 361.08 li
289.56 360.96 289.44 360.84 289.44 360.6 cv
290.52 360.6 li
290.52 360.84 290.52 360.96 290.4 361.08 cv
.26978 .825711 .676448 0 cmyk
f
298.2 360.6 mo
300.48 362.88 li
300.6 362.88 li
300.48 362.88 li
298.2 365.16 li
296.04 362.88 li
295.92 362.88 li
296.04 362.88 li
.260136 .804379 .644221 0 cmyk
f
297.84 360.24 mo
297.72 360.6 li
297.72 359.88 298.8 359.88 298.8 360.6 cv
298.56 360.24 li
300.84 362.52 li
300.48 362.28 li
301.32 362.28 li
301.32 363.48 li
300.48 363.48 li
300.84 363.24 li
298.56 365.52 li
298.8 365.16 li
298.8 366 li
297.72 366 li
297.72 365.16 li
297.84 365.52 li
295.56 363.24 li
296.04 363.48 li
295.92 363.48 li
295.2 363.48 295.2 362.28 295.92 362.28 cv
296.04 362.28 li
295.56 362.52 li
cp
296.4 363.24 mo
296.28 363.36 296.16 363.48 296.04 363.48 cv
295.92 363.48 li
295.92 362.28 li
296.04 362.28 li
296.16 362.28 296.28 362.4 296.4 362.52 cv
298.56 364.68 li
298.68 364.8 298.8 364.92 298.8 365.16 cv
297.72 365.16 li
297.72 364.92 297.72 364.8 297.84 364.68 cv
300 362.52 li
300.12 362.4 300.36 362.28 300.48 362.28 cv
300.6 362.28 li
300.6 363.48 li
300.48 363.48 li
300.36 363.48 300.12 363.36 300 363.24 cv
297.84 361.08 li
297.72 360.96 297.72 360.84 297.72 360.6 cv
298.8 360.6 li
298.8 360.84 298.68 360.96 298.56 361.08 cv
.26978 .825711 .676448 0 cmyk
f
306.6 360.6 mo
308.88 362.88 li
309 362.88 li
308.88 362.88 li
306.6 365.16 li
304.44 362.88 li
304.32 362.88 li
304.44 362.88 li
.260136 .804379 .644221 0 cmyk
f
306.24 360.24 mo
306 360.6 li
306 359.88 307.2 359.88 307.2 360.6 cv
306.96 360.24 li
309.24 362.52 li
308.88 362.28 li
309.72 362.28 li
309.72 363.48 li
308.88 363.48 li
309.24 363.24 li
306.96 365.52 li
307.2 365.16 li
307.2 366 li
306 366 li
306 365.16 li
306.24 365.52 li
303.96 363.24 li
304.44 363.48 li
304.32 363.48 li
303.6 363.48 303.6 362.28 304.32 362.28 cv
304.44 362.28 li
303.96 362.52 li
cp
304.8 363.24 mo
304.68 363.36 304.56 363.48 304.44 363.48 cv
304.32 363.48 li
304.32 362.28 li
304.44 362.28 li
304.56 362.28 304.68 362.4 304.8 362.52 cv
306.96 364.68 li
307.08 364.8 307.2 364.92 307.2 365.16 cv
306 365.16 li
306 364.92 306.12 364.8 306.24 364.68 cv
308.4 362.52 li
308.52 362.4 308.76 362.28 308.88 362.28 cv
309 362.28 li
309 363.48 li
308.88 363.48 li
308.76 363.48 308.52 363.36 308.4 363.24 cv
306.24 361.08 li
306.12 360.96 306 360.84 306 360.6 cv
307.2 360.6 li
307.2 360.84 307.08 360.96 306.96 361.08 cv
.26978 .825711 .676448 0 cmyk
f
314.88 360.6 mo
317.04 362.88 li
317.16 362.88 li
317.04 362.88 li
314.88 365.16 li
312.6 362.88 li
312.48 362.88 li
312.6 362.88 li
.260136 .804379 .644221 0 cmyk
f
314.4 360.24 mo
314.28 360.6 li
314.28 359.88 315.36 359.88 315.36 360.6 cv
315.24 360.24 li
317.52 362.52 li
317.04 362.28 li
317.88 362.28 li
317.88 363.48 li
317.04 363.48 li
317.52 363.24 li
315.24 365.52 li
315.36 365.16 li
315.36 366 li
314.28 366 li
314.28 365.16 li
314.4 365.52 li
312.24 363.24 li
312.6 363.48 li
312.48 363.48 li
311.76 363.48 311.76 362.28 312.48 362.28 cv
312.6 362.28 li
312.24 362.52 li
cp
312.96 363.24 mo
312.84 363.36 312.72 363.48 312.6 363.48 cv
312.48 363.48 li
312.48 362.28 li
312.6 362.28 li
312.72 362.28 312.84 362.4 312.96 362.52 cv
315.24 364.68 li
315.36 364.8 315.36 364.92 315.36 365.16 cv
314.28 365.16 li
314.28 364.92 314.28 364.8 314.4 364.68 cv
316.68 362.52 li
316.8 362.4 316.92 362.28 317.04 362.28 cv
317.16 362.28 li
317.16 363.48 li
317.04 363.48 li
316.92 363.48 316.8 363.36 316.68 363.24 cv
314.4 361.08 li
314.28 360.96 314.28 360.84 314.28 360.6 cv
315.36 360.6 li
315.36 360.84 315.36 360.96 315.24 361.08 cv
.26978 .825711 .676448 0 cmyk
f
323.28 360.6 mo
325.44 362.88 li
325.56 362.88 li
325.44 362.88 li
323.28 365.16 li
321 362.88 li
320.88 362.88 li
321 362.88 li
.260136 .804379 .644221 0 cmyk
f
322.8 360.24 mo
322.68 360.6 li
322.68 359.88 323.76 359.88 323.76 360.6 cv
323.64 360.24 li
325.92 362.52 li
325.44 362.28 li
326.28 362.28 li
326.28 363.48 li
325.44 363.48 li
325.92 363.24 li
323.64 365.52 li
323.76 365.16 li
323.76 366 li
322.68 366 li
322.68 365.16 li
322.8 365.52 li
320.64 363.24 li
321 363.48 li
320.88 363.48 li
320.16 363.48 320.16 362.28 320.88 362.28 cv
321 362.28 li
320.64 362.52 li
cp
321.36 363.24 mo
321.24 363.36 321.12 363.48 321 363.48 cv
320.88 363.48 li
320.88 362.28 li
321 362.28 li
321.12 362.28 321.24 362.4 321.36 362.52 cv
323.64 364.68 li
323.76 364.8 323.76 364.92 323.76 365.16 cv
322.68 365.16 li
322.68 364.92 322.68 364.8 322.8 364.68 cv
325.08 362.52 li
325.2 362.4 325.32 362.28 325.44 362.28 cv
325.56 362.28 li
325.56 363.48 li
325.44 363.48 li
325.32 363.48 325.2 363.36 325.08 363.24 cv
322.8 361.08 li
322.68 360.96 322.68 360.84 322.68 360.6 cv
323.76 360.6 li
323.76 360.84 323.76 360.96 323.64 361.08 cv
.26978 .825711 .676448 0 cmyk
f
331.44 360.6 mo
333.72 362.88 li
331.44 365.16 li
329.28 362.88 li
329.16 362.88 li
329.28 362.88 li
.260136 .804379 .644221 0 cmyk
f
331.08 360.24 mo
330.84 360.6 li
330.84 359.88 332.04 359.88 332.04 360.6 cv
331.8 360.24 li
334.08 362.52 li
333.72 362.28 li
334.56 362.28 li
334.56 363.48 li
333.72 363.48 li
334.08 363.24 li
331.8 365.52 li
332.04 365.16 li
332.04 366 li
330.84 366 li
330.84 365.16 li
331.08 365.52 li
328.8 363.24 li
329.28 363.48 li
329.16 363.48 li
328.44 363.48 328.44 362.28 329.16 362.28 cv
329.28 362.28 li
328.8 362.52 li
cp
329.64 363.24 mo
329.52 363.36 329.4 363.48 329.28 363.48 cv
329.16 363.48 li
329.16 362.28 li
329.28 362.28 li
329.4 362.28 329.52 362.4 329.64 362.52 cv
331.8 364.68 li
331.92 364.8 332.04 364.92 332.04 365.16 cv
330.84 365.16 li
330.84 364.92 330.96 364.8 331.08 364.68 cv
333.24 362.52 li
333.36 362.4 333.48 362.28 333.72 362.28 cv
333.72 363.48 li
333.48 363.48 333.36 363.36 333.24 363.24 cv
331.08 361.08 li
330.96 360.96 330.84 360.84 330.84 360.6 cv
332.04 360.6 li
332.04 360.84 331.92 360.96 331.8 361.08 cv
.26978 .825711 .676448 0 cmyk
f
339.84 360.6 mo
342.12 362.88 li
339.84 365.16 li
337.56 362.88 li
.260136 .804379 .644221 0 cmyk
f
339.48 360.24 mo
339.24 360.6 li
339.24 359.88 340.44 359.88 340.44 360.6 cv
340.2 360.24 li
342.48 362.52 li
342.12 362.28 li
342.96 362.28 li
342.96 363.48 li
342.12 363.48 li
342.48 363.24 li
340.2 365.52 li
340.44 365.16 li
340.44 366 li
339.24 366 li
339.24 365.16 li
339.48 365.52 li
337.2 363.24 li
337.56 363.48 li
336.84 363.48 336.84 362.28 337.56 362.28 cv
337.2 362.52 li
cp
338.04 363.24 mo
337.92 363.36 337.8 363.48 337.56 363.48 cv
337.56 362.28 li
337.8 362.28 337.92 362.4 338.04 362.52 cv
340.2 364.68 li
340.32 364.8 340.44 364.92 340.44 365.16 cv
339.24 365.16 li
339.24 364.92 339.36 364.8 339.48 364.68 cv
341.64 362.52 li
341.76 362.4 341.88 362.28 342.12 362.28 cv
342.12 363.48 li
341.88 363.48 341.76 363.36 341.64 363.24 cv
339.48 361.08 li
339.36 360.96 339.24 360.84 339.24 360.6 cv
340.44 360.6 li
340.44 360.84 340.32 360.96 340.2 361.08 cv
.26978 .825711 .676448 0 cmyk
f
348.12 360.6 mo
350.28 362.88 li
350.4 362.88 li
350.28 362.88 li
348.12 365.16 li
345.84 362.88 li
345.72 362.88 li
345.84 362.88 li
.260136 .804379 .644221 0 cmyk
f
347.64 360.24 mo
347.52 360.6 li
347.52 359.88 348.6 359.88 348.6 360.6 cv
348.48 360.24 li
350.64 362.52 li
350.28 362.28 li
351.12 362.28 li
351.12 363.48 li
350.28 363.48 li
350.64 363.24 li
348.48 365.52 li
348.6 365.16 li
348.6 366 li
347.52 366 li
347.52 365.16 li
347.64 365.52 li
345.48 363.24 li
345.84 363.48 li
345.72 363.48 li
345 363.48 345 362.28 345.72 362.28 cv
345.84 362.28 li
345.48 362.52 li
cp
346.2 363.24 mo
346.08 363.36 345.96 363.48 345.84 363.48 cv
345.72 363.48 li
345.72 362.28 li
345.84 362.28 li
345.96 362.28 346.08 362.4 346.2 362.52 cv
348.48 364.68 li
348.6 364.8 348.6 364.92 348.6 365.16 cv
347.52 365.16 li
347.52 364.92 347.52 364.8 347.64 364.68 cv
349.92 362.52 li
350.04 362.4 350.16 362.28 350.28 362.28 cv
350.4 362.28 li
350.4 363.48 li
350.28 363.48 li
350.16 363.48 350.04 363.36 349.92 363.24 cv
347.64 361.08 li
347.52 360.96 347.52 360.84 347.52 360.6 cv
348.6 360.6 li
348.6 360.84 348.6 360.96 348.48 361.08 cv
.26978 .825711 .676448 0 cmyk
f
356.52 360.6 mo
358.68 362.88 li
358.8 362.88 li
358.68 362.88 li
356.52 365.16 li
354.24 362.88 li
354.12 362.88 li
354.24 362.88 li
.260136 .804379 .644221 0 cmyk
f
356.04 360.24 mo
355.92 360.6 li
355.92 359.88 357 359.88 357 360.6 cv
356.88 360.24 li
359.04 362.52 li
358.68 362.28 li
359.52 362.28 li
359.52 363.48 li
358.68 363.48 li
359.04 363.24 li
356.88 365.52 li
357 365.16 li
357 366 li
355.92 366 li
355.92 365.16 li
356.04 365.52 li
353.88 363.24 li
354.24 363.48 li
354.12 363.48 li
353.4 363.48 353.4 362.28 354.12 362.28 cv
354.24 362.28 li
353.88 362.52 li
cp
354.6 363.24 mo
354.48 363.36 354.36 363.48 354.24 363.48 cv
354.12 363.48 li
354.12 362.28 li
354.24 362.28 li
354.36 362.28 354.48 362.4 354.6 362.52 cv
356.88 364.68 li
357 364.8 357 364.92 357 365.16 cv
355.92 365.16 li
355.92 364.92 355.92 364.8 356.04 364.68 cv
358.32 362.52 li
358.44 362.4 358.56 362.28 358.68 362.28 cv
358.8 362.28 li
358.8 363.48 li
358.68 363.48 li
358.56 363.48 358.44 363.36 358.32 363.24 cv
356.04 361.08 li
355.92 360.96 355.92 360.84 355.92 360.6 cv
357 360.6 li
357 360.84 357 360.96 356.88 361.08 cv
.26978 .825711 .676448 0 cmyk
f
364.68 360.6 mo
366.96 362.88 li
364.68 365.16 li
362.4 362.88 li
.260136 .804379 .644221 0 cmyk
f
364.32 360.24 mo
364.08 360.6 li
364.08 359.88 365.28 359.88 365.28 360.6 cv
365.04 360.24 li
367.32 362.52 li
366.96 362.28 li
367.8 362.28 li
367.8 363.48 li
366.96 363.48 li
367.32 363.24 li
365.04 365.52 li
365.28 365.16 li
365.28 366 li
364.08 366 li
364.08 365.16 li
364.32 365.52 li
362.04 363.24 li
362.4 363.48 li
361.68 363.48 361.68 362.28 362.4 362.28 cv
362.04 362.52 li
cp
362.88 363.24 mo
362.76 363.36 362.64 363.48 362.4 363.48 cv
362.4 362.28 li
362.64 362.28 362.76 362.4 362.88 362.52 cv
365.04 364.68 li
365.16 364.8 365.28 364.92 365.28 365.16 cv
364.08 365.16 li
364.08 364.92 364.2 364.8 364.32 364.68 cv
366.48 362.52 li
366.6 362.4 366.72 362.28 366.96 362.28 cv
366.96 363.48 li
366.72 363.48 366.6 363.36 366.48 363.24 cv
364.32 361.08 li
364.2 360.96 364.08 360.84 364.08 360.6 cv
365.28 360.6 li
365.28 360.84 365.16 360.96 365.04 361.08 cv
.26978 .825711 .676448 0 cmyk
f
373.08 360.6 mo
375.36 362.88 li
373.08 365.16 li
370.8 362.88 li
.260136 .804379 .644221 0 cmyk
f
372.72 360.24 mo
372.48 360.6 li
372.48 359.88 373.68 359.88 373.68 360.6 cv
373.44 360.24 li
375.72 362.52 li
375.36 362.28 li
376.2 362.28 li
376.2 363.48 li
375.36 363.48 li
375.72 363.24 li
373.44 365.52 li
373.68 365.16 li
373.68 366 li
372.48 366 li
372.48 365.16 li
372.72 365.52 li
370.44 363.24 li
370.8 363.48 li
369.96 363.48 369.96 362.28 370.8 362.28 cv
370.44 362.52 li
cp
371.28 363.24 mo
371.16 363.36 371.04 363.48 370.8 363.48 cv
370.8 362.28 li
371.04 362.28 371.16 362.4 371.28 362.52 cv
373.44 364.68 li
373.56 364.8 373.68 364.92 373.68 365.16 cv
372.48 365.16 li
372.48 364.92 372.6 364.8 372.72 364.68 cv
374.88 362.52 li
375 362.4 375.12 362.28 375.36 362.28 cv
375.36 363.48 li
375.12 363.48 375 363.36 374.88 363.24 cv
372.72 361.08 li
372.6 360.96 372.48 360.84 372.48 360.6 cv
373.68 360.6 li
373.68 360.84 373.56 360.96 373.44 361.08 cv
.26978 .825711 .676448 0 cmyk
f
381.36 360.6 mo
383.52 362.88 li
383.64 362.88 li
383.52 362.88 li
381.36 365.16 li
379.08 362.88 li
378.96 362.88 li
379.08 362.88 li
.260136 .804379 .644221 0 cmyk
f
380.88 360.24 mo
380.76 360.6 li
380.76 359.88 381.84 359.88 381.84 360.6 cv
381.72 360.24 li
383.88 362.52 li
383.52 362.28 li
384.36 362.28 li
384.36 363.48 li
383.52 363.48 li
383.88 363.24 li
381.72 365.52 li
381.84 365.16 li
381.84 366 li
380.76 366 li
380.76 365.16 li
380.88 365.52 li
378.72 363.24 li
379.08 363.48 li
378.96 363.48 li
378.24 363.48 378.24 362.28 378.96 362.28 cv
379.08 362.28 li
378.72 362.52 li
cp
379.44 363.24 mo
379.32 363.36 379.2 363.48 379.08 363.48 cv
378.96 363.48 li
378.96 362.28 li
379.08 362.28 li
379.2 362.28 379.32 362.4 379.44 362.52 cv
381.72 364.68 li
381.84 364.8 381.84 364.92 381.84 365.16 cv
380.76 365.16 li
380.76 364.92 380.76 364.8 380.88 364.68 cv
383.16 362.52 li
383.28 362.4 383.4 362.28 383.52 362.28 cv
383.64 362.28 li
383.64 363.48 li
383.52 363.48 li
383.4 363.48 383.28 363.36 383.16 363.24 cv
380.88 361.08 li
380.76 360.96 380.76 360.84 380.76 360.6 cv
381.84 360.6 li
381.84 360.84 381.84 360.96 381.72 361.08 cv
.26978 .825711 .676448 0 cmyk
f
389.76 360.6 mo
391.92 362.88 li
392.04 362.88 li
391.92 362.88 li
389.76 365.16 li
387.48 362.88 li
387.36 362.88 li
387.48 362.88 li
.260136 .804379 .644221 0 cmyk
f
389.28 360.24 mo
389.16 360.6 li
389.16 359.88 390.24 359.88 390.24 360.6 cv
390.12 360.24 li
392.28 362.52 li
391.92 362.28 li
392.76 362.28 li
392.76 363.48 li
391.92 363.48 li
392.28 363.24 li
390.12 365.52 li
390.24 365.16 li
390.24 366 li
389.16 366 li
389.16 365.16 li
389.28 365.52 li
387.12 363.24 li
387.48 363.48 li
387.36 363.48 li
386.64 363.48 386.64 362.28 387.36 362.28 cv
387.48 362.28 li
387.12 362.52 li
cp
387.84 363.24 mo
387.72 363.36 387.6 363.48 387.48 363.48 cv
387.36 363.48 li
387.36 362.28 li
387.48 362.28 li
387.6 362.28 387.72 362.4 387.84 362.52 cv
390.12 364.68 li
390.24 364.8 390.24 364.92 390.24 365.16 cv
389.16 365.16 li
389.16 364.92 389.16 364.8 389.28 364.68 cv
391.56 362.52 li
391.68 362.4 391.8 362.28 391.92 362.28 cv
392.04 362.28 li
392.04 363.48 li
391.92 363.48 li
391.8 363.48 391.68 363.36 391.56 363.24 cv
389.28 361.08 li
389.16 360.96 389.16 360.84 389.16 360.6 cv
390.24 360.6 li
390.24 360.84 390.24 360.96 390.12 361.08 cv
.26978 .825711 .676448 0 cmyk
f
397.92 360.6 mo
400.2 362.88 li
397.92 365.16 li
395.64 362.88 li
.260136 .804379 .644221 0 cmyk
f
397.56 360.24 mo
397.32 360.6 li
397.32 359.88 398.52 359.88 398.52 360.6 cv
398.28 360.24 li
400.56 362.52 li
400.2 362.28 li
401.04 362.28 li
401.04 363.48 li
400.2 363.48 li
400.56 363.24 li
398.28 365.52 li
398.52 365.16 li
398.52 366 li
397.32 366 li
397.32 365.16 li
397.56 365.52 li
395.28 363.24 li
395.64 363.48 li
394.8 363.48 394.8 362.28 395.64 362.28 cv
395.28 362.52 li
cp
396.12 363.24 mo
396 363.36 395.88 363.48 395.64 363.48 cv
395.64 362.28 li
395.88 362.28 396 362.4 396.12 362.52 cv
398.28 364.68 li
398.4 364.8 398.52 364.92 398.52 365.16 cv
397.32 365.16 li
397.32 364.92 397.44 364.8 397.56 364.68 cv
399.72 362.52 li
399.84 362.4 399.96 362.28 400.2 362.28 cv
400.2 363.48 li
399.96 363.48 399.84 363.36 399.72 363.24 cv
397.56 361.08 li
397.44 360.96 397.32 360.84 397.32 360.6 cv
398.52 360.6 li
398.52 360.84 398.4 360.96 398.28 361.08 cv
.26978 .825711 .676448 0 cmyk
f
406.2 360.6 mo
408.36 362.88 li
408.48 362.88 li
408.36 362.88 li
406.2 365.16 li
403.92 362.88 li
403.8 362.88 li
403.92 362.88 li
.260136 .804379 .644221 0 cmyk
f
405.72 360.24 mo
405.6 360.6 li
405.6 359.88 406.68 359.88 406.68 360.6 cv
406.56 360.24 li
408.72 362.52 li
408.36 362.28 li
409.2 362.28 li
409.2 363.48 li
408.36 363.48 li
408.72 363.24 li
406.56 365.52 li
406.68 365.16 li
406.68 366 li
405.6 366 li
405.6 365.16 li
405.72 365.52 li
403.56 363.24 li
403.92 363.48 li
403.8 363.48 li
403.08 363.48 403.08 362.28 403.8 362.28 cv
403.92 362.28 li
403.56 362.52 li
cp
404.28 363.24 mo
404.16 363.36 404.04 363.48 403.92 363.48 cv
403.8 363.48 li
403.8 362.28 li
403.92 362.28 li
404.04 362.28 404.16 362.4 404.28 362.52 cv
406.56 364.68 li
406.68 364.8 406.68 364.92 406.68 365.16 cv
405.6 365.16 li
405.6 364.92 405.6 364.8 405.72 364.68 cv
408 362.52 li
408.12 362.4 408.24 362.28 408.36 362.28 cv
408.48 362.28 li
408.48 363.48 li
408.36 363.48 li
408.24 363.48 408.12 363.36 408 363.24 cv
405.72 361.08 li
405.6 360.96 405.6 360.84 405.6 360.6 cv
406.68 360.6 li
406.68 360.84 406.68 360.96 406.56 361.08 cv
.26978 .825711 .676448 0 cmyk
f
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WGJAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /WGJAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e5b7d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966a03837a70000b18c00001ce268656164e625fe3e00000f640000
0036686865610dad124400000f9c00000024686d74780b0cadc000000fc0
00003c4a6c6f63610175235c00004c0c00003c8c6d617870214303970000
8898000000206e616d652ee5585a000088b8000004c1707265706baf02fe
00008d7c00002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb8ef5aa14b5f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f03040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
051900610444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099045c00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b4000000>
<000000000000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000002ae000003a8000003a8000003a80000
03a8000003a8000003a8000003a8000003a8000003a8000003a8000003a8
000003a8000003a8000003a8000003a8000003a8000003a8000003a80000
03a8000003a8000003a8000003a8000003a8000003a8000003a8000003a8
000003a8000003a8000003a8000003a8000003a8000003a8000003a80000
03a8000003a8000003a8000003a8000003a8000003a8000003a8000003a8
000003a8000003a8000003a8000003a8000003a8000003a8000003a80000
03a8000003a8000003a8000003a8000003a8000003a8000003a8000003a8
000003a8000003a8000003a8000003a8000003a8000003a8000003a80000
03a8000003a8000003a8000003a8000003a8000003a80000049a0000049a
0000049a000005f0000005f0000005f0000005f000000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
000007940000079400000794000007940000079400000794000007940000
079400000794000007940000079400000794000007940000079400000794
00000794000007940000079400000794000008f2000008f2000008f20000
08f2000008f2000008f2000008f2000008f2000008f2000008f2000008f2
000008f2000008f2000008f2000008f2000008f2000008f2000008f20000
08f2000008f2000008f2000008f2000008f2000008f200000a2000000a20
00000a2000000a2000000b6200000b6200000b6200000b6200000b620000
0b6200000b6200000b6200000b6200000b6200000b6200000b6200000b62
00000b6200000b6200000b6200000b6200000b6200000b6200000b620000
0b6200000b6200000b6200000b6200000b6200000b6200000b6200000b62
00000b6200000b6200000b6200000b6200000b6200000b6200000b620000
0b6200000b6200000b6200000b6200000b6200000b6200000b6200000b62
00000b6200000b6200000b6200000b6200000b6200000b6200000b620000
0d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c
00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c0000
0d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c
00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c0000
0d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c
00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c0000
0d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c
00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c00000d3c0000
0d3c00000d3c00000d3c00000d3c00000ec800000ec800000ec800000ec8
00000ec800000ec800000ec800000ec800000ec800000ec800000ec80000
0ec800000ec800000ec800000ec800000ec800000ec800000ec800000ec8
00000ec800000ec800000ec800000ec800000ec800000ec800000ec80000
0ec800000ec800000ec800000ec800000ec800000ec800000ec800000ec8
00000ec800000ec800000ec800000ec800000ec800000ec800000ec80000
0ec800000ec800000ec800000ec800000ec800000ec800000ec800000ec8
00000ec800000ec800000ec800000ec800000ec800000ec800000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000f9200000f9200000f9200000f9200000f920000
0f9200000f9200000f9200000f9200000f9200000f9200000f9200000f92
00000f9200000f9200000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600000fd600000fd600000fd600000fd6
00000fd600000fd600000fd600000fd600000fd600000fd600000fd60000
0fd600000fd600000fd600000fd600001132000011320000113200001132
000011320000113200001132000011320000113200001132000011320000
113200001132000011320000113200001132000011320000113200001132
000011320000113200001132000011320000113200001132000011320000
113200001132000011320000113200001132000011320000113200001132
0000129800001406000015460000172e000018b800001a2200001a320000
1b7000001b7000001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce200001ce200001ce20000
1ce200001ce200001ce200001ce200001ce200001ce200001ce200001ce2
00001ce200001ce200001ce200001ce200001ce2000100000f2201200010
00c3000700020010002f0065000011900182000400010000000e00ae0000
00030000000000640000000000030000000700fa00640001000000000000
0032015e0001000000000003000e01900001000000000004000e019e0001
000000000006000e01ac0001000000000007007d01ba0003000104090000
006402370003000104090001001c029b0003000104090002000e02b70003
000104090003001c02c50003000104090004001c02e10003000104090006
001c02fd000300010409000700fa031900a9002000320030003000380020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002ea92032303038204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e4b414f49
42482b43616c696272694b414f4942482b43616c696272694b414f494248
2b43616c6962726943616c69627269206973206569746865722061207265
67697374657265642074726164656d61726b206f7220612074726164656d
61726b206f66204d6963726f736f667420436f72706f726174696f6e2069
6e2074686520556e697465642053746174657320616e642f6f72206f7468
657220636f756e74726965732e00a9002000320030003000380020004d00
6900630072006f0073006f0066007400200043006f00720070006f007200
6100740069006f006e002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e004b0041004f00
4900420048002b00430061006c0069006200720069005200650067007500
6c00610072004b0041004f004900420048002b00430061006c0069006200
720069004b0041004f004900420048002b00430061006c00690062007200
69004b0041004f004900420048002b00430061006c006900620072006900
430061006c00690062007200690020006900730020006500690074006800
650072002000610020007200650067006900730074006500720065006400
2000740072006100640065006d00610072006b0020006f00720020006100
2000740072006100640065006d00610072006b0020006f00660020004d00
6900630072006f0073006f0066007400200043006f00720070006f007200
6100740069006f006e00200069006e002000740068006500200055006e00
69007400650064002000530074006100740065007300200061006e006400
2f006f00720020006f007400680065007200200063006f0075006e007400
72006900650073002e000000b2090320b80284b40918014a20b80283b409
18014a20b80282b40918014a20b80281b40918014a20b80280b40918014a
20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20b802
7cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279b409
18014a20b80278b40918014a20b80277b40918014a20b80276b40918014a
20b80275b40918014a20b80274b40918014a20b80273b40918014a20b802
71b40918014a20b80270b40918014a20b8026fb40918014a20b8026eb409
18014a20b8026db40918014a20b8026cb40918014a20b8026bb40918014a
20b8026ab40918014a20b80269b40918014a20b80268b40918014a20b802
67b40918014a20b80266b40918014a20b80265b40918014a20b80264b409
18014a20b80263b40918014a20b80262b40918014a20b80261b40918014a
20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20b802
5db40918014a20b8025cb40918014a20b8025bb40918014a20b8025ab409
18014a20b80259b40918014a20b80258b40918014a20b80257b40918014a
20b80256b40918014a20b80255b40918014a20b80254b40918014a20b802
53b40918014a20b80252b40918014a20b80251b40918014a20b80250b409
18014a20b8024fb40918014a20b8024eb40918014a20b8024db40918014a
20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20b802
49b40918014a20b80248b40918014a20b80247b40918014a20b80246b409
18014a20b80245b40918014a20b80244b40918014a20b80243b40918014a
20b80242b40918014a20b80241b40918014a20b80240b40918014a20b802
3fb40918014a20b8023eb40918014a20b8023db40918014a20b8023cb409
18014a20b8023bb40918014a20b8023ab40918014a20b80239b40918014a
20b80238b40918014a20b80237b40918014a20b80236b40918014a20b802
35b40918014a20b80234b40918014a20b80233b40918014a20b80232b409
18014a20b80231b40918014a20b80230b40918014a20b8022fb40918014a
20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20b802
2bb40918014a20b8022ab40918014a20b80229b40918014a20b80228b409
18014a20b80227b40918014a20b80226b40918014a20b80225b40918014a
20b80224b40918014a20b80223b40918014a20b80222b40918014a20b802
21b40918014a20b80220b40918014a20b8021fb40918014a20b8021eb409
18014a20b8021db40918014a20b8021cb40918014a20b8021bb40918014a
20b8021ab40918014a20b80219b40918014a20b80218b40918014a20b802
17b40918014a20b80216b40918014a20b80215b40918014a20b80214b409
18014a20b80213b40918014a20b80212b40918014a20b80211b40918014a
20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20b802
0db40918014a20b8020cb40918014a20b8020bb40918014a20b8020ab409
18014a20b80209b40918014a20b80208b40918014a20b80207b40918014a
20b80206b40918014a20b80205b40918014a20b80204b40918014a20b802
03b40918014a20b80202b40918014a20b80201b40918014a20b80200b409
18014a20b801ffb40918014a20b801feb40918014a20b801fdb40918014a
20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20b801
f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6b409
18014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918014a
20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20b801
efb40918014a20b801eeb40918014a20b801edb40918014a20b801ecb409
18014a20b801ebb40918014a20b801eab40918014a20b801e9b40918014a
20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20b801
e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2b409
18014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918014a
20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20b801
dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8b409
18014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918014a
20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20b801
d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ceb409
18014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918014a
20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20b801
c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4b409
18014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918014a
20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20b801
bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801bab409
18014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918014a
20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20b801
b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0b409
18014a20b801afb40918014a20b801aeb40918014a20b801adb40918014a
20b801acb40918014a20b801abb40918014a20b801aab40918014a20b801
a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6b409
18014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918014a
20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20b801
9fb40918014a20b8019eb40918014a20b8019db40918014a20b8019cb409
18014a20b8019bb40918014a20b8019ab40918014a20b80199b40918014a
20b80198b40918014a20b80197b40918014a20b80196b40918014a20b801
95b40918014a20b80194b40918014a20b80193b40918014a20b80192b409
18014a20b80191b40918014a20b80190b40918014a20b8018fb40918014a
20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20b801
8bb40918014a20b8018ab40918014a20b80189b40918014a20b80188b409
18014a20b80187b40918014a20b80186b40918014a20b80185b40918014a
20b80184b40918014a20b80183b40918014a20b80182b40918014a20b801
81b40918014a20b80180b40918014a20b8017fb40918014a20b8017eb409
18014a20b8017db40918014a20b8017cb40918014a20b8017bb40918014a
20b8017ab40918014a20b80179b40918014a20b80178b40918014a20b801
77b40918014a20b80176b40918014a20b80175b40918014a20b80174b409
18014a20b80173b40918014a20b80172b40918014a20b80171b40918014a
20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20b801
6db40918014a20b8016cb40918014a20b8016bb40918014a20b8016ab409
18014a20b80169b40918014a20b80168b40918014a20b80167b40918014a
20b80166b40918014a20b80165b40918014a20b80164b40918014a20b801
63b40918014a20b80162b40918014a20b80161b40918014a20b80160b409
18014a20b8015fb40918014a20b8015eb40918014a20b8015db40918014a
20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20b801
59b40918014a20b80158b40918014a20b80157b40918014a20b80156b409
18014a20b80155b40918014a20b80154b40918014a20b80153b40918014a
20b80152b40918014a20b80150b40918014a20b8014fb40918014a20b801
4eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014ab409
18014a20b80149b40918014a20b80148b40918014a20b80147b40918014a
20b80146b40918014a20b80145b40918014a20b80144b40918014a20b801
43b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb80281
b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e
3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411f
b80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411fb802
74b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb80270b2
1d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb21d43
1fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c451fb8
0267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb80263
b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025fb21c
451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c451f
b8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451fb802
56b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb80252b2
1c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c45
1fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b491fb8
0249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245
b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b
491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1f
b8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb802
38b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb80234b2
1b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b
1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8
022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227
b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b
4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1f
b8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb802
1ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b2
1a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f
1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8
020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209
b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205b219
511fb80204b219511fb80203b219501fb80202b219511fb80201b219511f
b80200b219511fb801ffb219511fb801feb219501fb801fdb219511fb801
fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801f8b2
19511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b21853
1fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b218531fb8
01efb218541fb801eeb218541fb801edb218541fb801ecb218531fb801eb
b218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7b218
541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218541f
b801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531fb801
deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801dab2
18531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b21756
1fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b217571fb8
01d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb801cd
b217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9b217
561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217571f
b801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571fb801
c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801bcb2
17571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b21756
1fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b217571fb8
01b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801af
b2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801abb216
5b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1f
b801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801
a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2
163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b
1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b1fb8
0195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb80191
b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018db216
5b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1f
b80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621fb801
84b215621fb80183b215661fb80182b215661fb80181b215551fb80180b2
15451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb21562
1fb8017bb215621fb8017ab215641fb80179b215661fb80178b215661fb8
0177b215661fb80176b215661fb80175b215661fb80174b215661fb80173
b215451fb80172b215621fb80171b215621fb80170b215631fb8016fb215
641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215661f
b8016ab215661fb80169b215621fb80168b215621fb80167b215611fb801
66b215641fb80165b215641fb80164b215661fb80163b215661fb80162b2
15661fb80161b215661fb80160b215661fb8015fb215661fb8015eb21555
1fb8015db215451fb8015cb215451fb8015bb215361fb8015ab215611fb8
0159b215621fb80158b215621fb80157b215631fb80156b215641fb80155
b215661fb80154b215661fb80153b215661fb80152b215661fb80151b214
401fb80150b214551fb8014fb214561fb8014eb214831fb8014db2142d1f
b8014cb214401fb8014bb214401fb8014ab214411fb80149b214401fb801
48b214401fb80147b214411fb80146b2147e1fb80145b214871fb80144b2
147f1fb80143b214801fb80142b212461fb80141b212461fb80140b21246
1fb8013fb212461fb8013eb212441fb8013db212461fb8013cb211591fb8
013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb80137
b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133b211
2c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211571f
b8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1fb801
2ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb80126b2
115b1fb80125b211561fb80124b211561fb80123b211571fb80122b21158
1fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8
011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119
b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115b210
5f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b2105e1f
b80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1fb801
0cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb80108b2
105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2105f
1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f621f
ff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f
641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f641f
f00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f
641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e681f
e10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e
681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261f
d20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d
6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261f
c30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c711f
bc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711fb50c
721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b7a1f
ad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b
7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f
9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b
7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f
8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f8255
805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d40
12060a7c557a557bab7a557955775578ab7755ba028600660285403c5576
ab755504751475747503f47501ab75014475013075010200751075207503
0c7455725573ab7255007250728072b072043bb072e072020072010ab8ff
c0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a0325
1f6938675568ab67556638645565ab645563386255613860555f385d555e
ab5d555c385a555bab5a55593858555703251f5638545555ab5455533851
5552ab51554f384e554e03251f4d384b554cab4b554a38485549ab485547
3846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b
401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f19
7f198f19030f18cf18024018292c460f17cf17df17ef1704134017292e46
0016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b31631
3546b8ffc0404d162326460f15010f151f1502451f15010011e011f01103
15bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e
03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c
5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d3046000301200101
0001100120010308b8ffc0b301151f46b80100b316010501b80190b15453
2b2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b000
555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d0042
1d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db11600
42592b5e7375732b2b745e732b2b5e73742b73742b7374745e7301755e73
742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e7375
5e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb10002435458
41ff0284006402830064028200640281006402800064027f0064027e0064
027d0064027c0064027b0064027a00640279006402780064027700640276
00640275006402740064027300640271006402700064026f0064026e0064
026d0064026c0064026b0064026a00640269006402680064026700640266
0064026500640264006402630064026200640261006402600064025f0064
025e0064025d0064025c0064025b0064025a006402590064025800640257
006402560064025500640254006402530064025200640251006402500064
024f0064024e0064024d0064024c0064024b0064024a0064024900640248
006402470064024600640245006402440064024300640242006402410064
02400064023f0064023e0064023d0064023c0064023b0064023a00640239
006402380064023700640236006402350064023400640233006402320064
0231006402300064022f0064022e0064022d0064022c0064022b0064022a
006402290064022800640227006402260064022500640224006402230064
022200640221006402200064021f0064021e0064021d0064021c0064021b
0064021a0064021900640218006402170064021600640215006402140064
02130064021200640211006402100064020f0064020e0064020d0064020c
0064020b0064020a00640209006402080064020700640206006402050064
020441ff00640203006402020064020100640200006401ff006401fe0064
01fd006401fc006401fb006401fa006401f9006401f8006401f7006401f6
006401f5006401f4006401f3006401f2006401f1006401f0006401ef0064
01ee006401ed006401ec006401eb006401ea006401e9006401e8006401e7
006401e6006401e5006401e4006401e3006401e2006401e1006401e00064
01df006401de006401dd006401dc006401db006401da006401d9006401d8
006401d7006401d6006401d5006401d4006401d3006401d2006401d10064
01d0006401cf006401ce006401cd006401cc006401cb006401ca006401c9
006401c8006401c7006401c6006401c5006401c4006401c3006401c20064
01c1006401c0006401bf006401be006401bd006401bc006401bb006401ba
006401b9006401b8006401b7006401b6006401b5006401b4006401b30064
01b2006401b1006401b0006401af006401ae006401ad006401ac006401ab
006401aa006401a9006401a8006401a7006401a6006401a5006401a40064
01a3006401a2006401a1006401a00064019f0064019e0064019d0064019c
0064019b0064019a00640199006401980064019700640196006401950064
0194006401930064019200640191006401900064018f0064018e0064018d
0064018c0064018b0064018a006401890064018800640187006401860064
0185006441800184006401830064018200640181006401800064017f0064
017e0064017d0064017c0064017b0064017a006401790064017800640177
006401760064017500640174006401730064017200640171006401700064
016f0064016e0064016d0064016c0064016b0064016a0064016900640168
006401670064016600640165006401640064016300640162006401610064
01600064015f0064015e0064015d0064015c0064015b0064015a00640159
006401580064015700640156006401550064015400640153006401520064
01500064014f0064014e0064014c0064014b0064014a0064014900640148
006401470064014600640145006401440064014300642b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b185f5e00>
[7395 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3986 856 <00010097fff7016e00e0000b0017b10006b8ffc0b60c014d0609034c003f
cd012f2bc13130251406232226353436333216016e2f3e3c2e2f3e3c2e6d
472f2e45472f2e00>WGJAAA+Calibri AddT42Char 
2 4402 1004 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>WGJAAA+Calibri AddT42Char 
2 4760 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>WGJAAA+Calibri AddT42Char 
2 5126 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>WGJAAA+Calibri AddT42Char 
2 5446 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>WGJAAA+Calibri AddT42Char 
2 5934 1008 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>WGJAAA+Calibri AddT42Char 
2 6328 1009 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a>WGJAAA+Calibri AddT42Char 
2 4054 970 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>WGJAAA+Calibri AddT42Char 
2 6690 1010 <ffff006bffed03bd0520020603ca0000>WGJAAA+Calibri AddT42Char 
2 6706 1011 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c>WGJAAA+Calibri AddT42Char 
2 7024 1013 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>WGJAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>WGJAAA+Calibri AddT42Char 
WGJAAA+Calibri /CharStrings get begin
/period 856 def
/zero 1004 def
/one 1005 def
/two 1006 def
/three 1007 def
/four 1008 def
/five 1009 def
/six 1010 def
/seven 1011 def
/nine 1013 def
end
WGJAAA+Calibri /Encoding get
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
pop
end
%ADOEndSubsetFont
/EGRRYX+Calibri /WGJAAA+Calibri findfont ct_VMDictPut
/EGRRYX+Calibri*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /.notdef /nine 198{/.notdef}rp]
EGRRYX+Calibri nf
EGRRYX+Calibri*1 [14.8298 0 0 -14.8298 0 0 ]msf
117.12 545.88 mo
(0.59)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 521.4 mo
(0.61)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 496.8 mo
(0.63)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 472.321 mo
(0.65)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 447.721 mo
(0.67)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 423.242 mo
(0.69)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 398.642 mo
(0.71)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 374.162 mo
(0.73)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 349.563 mo
(0.75)
[7.44313 3.83349 7.6819 0 ]xsh
117.12 325.083 mo
(0.77)
[7.44313 3.83349 7.6819 0 ]xsh
149.76 565.203 mo
(2025303540455055)
[7.56177 33.9618 7.56177 33.9618 7.44315 34.0819 7.44312 34.0819 7.44315 33.9618 7.56177 33.9618 
7.56177 33.9618 7.56171 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f32fc13ba13000000cc000000606376
74202f4935490000012c000006086670676da1ea42ac0000073400000913
676c79668c1300f70000a428000017b668656164e606fe47000010480000
0036686865610d8d122a0000108000000024686d7478cec5ef7f000010a4
00003c4a6c6f6361014b294800004cf000003c8c6d6178701c1103500000
897c000000206e616d65395f0e6d0000899c000004ee70726570c7f0742e
00008e8c0000159c676469720000000000000000000000000003044a02bc
00050008059905330000011e05990533000003d000ba02000800020f0702
030404030204e10002ff4000acff00000009000000004d53202000200000
feff0600fe0001c4079e02262000019f0000000003c0050e000000200003
0000079e0000fe930000000000000000000000810081009c00ab00b500ba
00c100ca00d300f3010a0060008500bf00e300ea00f200fb010001070115
011c01290000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe83056d000d03c000060017
0000fffaffe9fea9ffe90000050e000600170000fffaffe9fe93050e0017
0426000600170000fffaffe9ff12ffed050e00170426000600170000fffa
ffe9fe93feb8fece060b0010050e0006001002cbfffafff001edfffa023f
00060010ff36fffafff00287000600100000fffafff0079efeaffe9f0000
0000000000000000000000700072007500780079007a007b007d007e007f
008300860087008800890085007f0086008b008c008d008e008f00900091
00920093009400950096009700980099009a009b009c009d009e009f0092
00930094009b009c009e009e00960099009a009d009e00a200a600a900ac
00a200a300a400a500a700a800a900aa00ab00ac00ae00a300a500a700a8
00aa00ab00ac00ad00ae00a000a100a300a600a700a900aa00ac00ad00af
00af00b000b100b200b300b400b500af00af00b000b200b300b400b500b8
00c000b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c200b9
00ba00bc00bd00bf00c000c100c200b600b700b800b900ba00bb00bc00bd
00be00bf00c000c100c200c000c100c200c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb
00cc00cd00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c500c800c900ca00cb00ce00cf00d000d100d200d300d400d5
00d600d700d900db00de00df00e000e200e300ec00d000d100d200d300d4
00d500d600d700d800d900da00db00dd00de00df00e000e100e300e500e9
00ec00ed00d100d300d400d500d800d900da00dc00e000e100e800d000d1
00d400d600e000e4010800f5010200fb00ff0108008f0090009600920093
00990090009100970098009a009d00a400a600a700a800a900af009a00a2
00a300a700a900aa00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a
00aa00ac00ad00ae00af00b100b900bb00bc00bd00be00c100c200c300c4
00c500c600c700c800c900ca00cb00ce00b300b400b500b600b700b800bc
00c200c500c800ca00cb00cd00ce00cf00d000c700b700b800b900bb00bc
00be00c600c700c800c900cb00cf00d000b200b600b700c200c400c500c6
00c700cb00cc00cd00ce00cf00d000d100d400d500d700d800d900da00db
00dc00de00df00e000e200e300e500e600d100d300d600d700d800da00db
00dc00dd00de00df00e000e100e200e300e400e500d100d200d400d500da
00db00dd00de00df00e000e100e200e600d200d300d400d700d800dd00de
00e000e100e200e300e400e500e600d200da00e100e900ea00ec00e800e9
00ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed
00ee00ef00f500ee00ef00f000f100f200f300f400f500f600ee00f000f2
00ef00f000f100f200f300f400f500f600ee00ef00f000f100f200f300f4
00f500f600f700f700f800f900fa00fb00fc00fd00f700f800f900fa00fb
00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff0100010101020103
00fe010001010102010300fe00ff01000101010201030102010301040105
0106010701080109010a010c010d010e010f011001070104010501060107
01080109010a010b010d010e010f01100111010401050106010701080109
010a010b010c010d010e010f0110011101040105010601070109010e010f
011201130114011501170118011a011b011c011d011e011f012101220112
01130114011501170119011b011c011d011e012001210123012401250113
011401150116011701180119011a011b011c011d011f01200117011c011d
011e012001210129013001770129012b012e012f01300131013401350137
0139012b012d013001320134013a012e01300134013a014200500062006c
00fa05e802cc0114011400a000b140465f5e5d5c5b5a5958555453525150
4f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d
2c2826252423221f181411100f0d0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b0042651582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b43
23430b2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d
2c2045b00325456164b050515845441b2121592d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297a
e4182d2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2c00b00743b006430b2d2c21210c6423648bb8400062
2d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0
c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8
4000626023212d2c4523456023456023456023766818b08062202d2cb004
26b00426b00425b0042545234520b003266062636820b0032661658a2344
442d2c2045b0005458b040442045b04061441b2121592d2c45b1302f4523
456160b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b5158
20b0032545695358441b2121591b2121592d2c45b01443b0006063b00160
69442d2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158
b90033ffe0b134201bb3330034005944442d2cb0164358b00326458a5864
66b01f601b64b020606620581b21b04059b001615923586559b029234423
10b029e01b2121212121592d2cb0164358b004254564b020606620581b21
b04059b0016123586559b0292344b00425b00725082058021b0359b00525
10b004252046b0042523423cb0072510b006252046b00425b0016023423c
2058011b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0
0725082058021b0359b00425b003254348b00625b00325b0016043481b21
59212121212121212d2cb0164358b004254564b020606620581b21b04059
b0016123581b6559b0292344b00525b00825082058021b0359b0042510b0
05252046b0042523423cb00425b0072508b0072510b006252046b00425b0
016023423c2058011b0059b0042510b00525b029e0b02920456544b00725
10b00625b029e0b00525b00825082058021b0359b00525b003254348b004
25b0072508b00625b00325b0016043481b2159212121212121212d2c02b0
0425202046b004252342b0052508b003254548212121212d2c02b0032520
b0042508b0022543482121212d2c452320451820b0005020582365235923
6820b040505821b04059235865598a60442d2c4b53234b515a5820458a60
441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b
2121592d2cb000214b5458381b2121592d2cb002435458b0462b1b212121
21592d2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121
2121592d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a
5823381b2121592d2c0020b200400325b0062649618b3812342d2c014623
466023466123201020468a61b8ff80628ab140408a704560683a2d2c208a
2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b5442
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d000001
000000059eb8db050d1f5f0f3cf50019080000000000bbeb7ccc00000000
c5229872fbdafd8d09ec07c5000000090002000100000000000100000600
fe0001c40aa0fbdafa8609ec000100000000000000000000000000000f03
040e0000000000000000000001cf000004d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001704d9001704d9001704d90017
0634ffd30634ffd3047c008d043c004f043c004f043c004f043c004f043c
004f043c004f050b008d050b008d051d000f051d000f03e7008d03e7003f
03e7008d03e7003f03e7003c03e7004d03e7005503e7007503e7008d03e7
008d03ac008d0519004905190049051900490519004905190049050c008d
050c008d054300100222008d0222ff5a022200260222ff440222ff480222
ff4e0222ff5b0222ff80022200220222001e04c9008d02a6000302a6ffaf
0460008d0460008d0362008d036200720371008d0362008d03760015047e
008d06fe008d0545008d0545008d0545008d0545008d0545008d0521008d
056900500569005005690050056900500569005005690050056900500569
005005690050057200500572005006fe00500442008d0442008d057d0050
0481008d0481008d0481006a0481008d03c8003f03c8003f03c8001f03c8
002303c8003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c
0539008c0539008c0539008c0539008c0539008c0539008c0539008c0539
008c0539008c0539008c04bb00160740002b0740002b0740002b0740002b
0740002b04680021042800100428001004280010042800100428001003d3
003303d3003303d3001e03d300330447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a058f
ffe2058fffe20438008603cb005a03cb005a03cb005a03cb005a03cb005a
03cb005a049100860491008104a6002604a60026038f0086038f0024038f
0086038f0020038f0020038f001d038f0030038f003f038f0086038f0086
03580086049c0058049c0058049c0058049c0058049c0058049c0086049c
008604c10034021000860210ff600210001f0210ff540210ff410210ff53
0210ff650210ff7b0210001802100016046f0086026900000269ffa10405
00860405008602fc008602fc0085030d008602fc0086030c002c04150086
0648008604c7008604c7008604c7008604c7008604c700860497008604da
005504da005504da005504da005504da005504da005504da005504da0055
04da005504e4005504e40055062e005503fd008603fd008604de00550425
0086042500860425005a04250086036f0043036f0043036f0001036f0006
036f0043036f0043037b001b037b0008037b001b037b001b04ac008404ac
008404ac008404ac008404ac008404ac008404ac008404ac008404ac0084
04ac008404ac00840435001b068a002b068a002b068a002b068a002b068a
002b0404002603cd000b03cd000b03cd000b03cd000b03cd000b038f003e
038f003e038f0016038f003e03f3004703f3004703f3004703f3004703f3
003703f3004703f3004703f3004703f3004703f3004703f3004706330047
06330047044b007e03590048035900480359003b03590048035900480359
0048077d004807080048060e0048060e0048044b004b04c6004b048d004b
044b004c0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0288001906c200190909001904ce0019
06c2001909090019046f0019046f0019046f0019046f0019048100190481
00190481001904810019046f0019046f001906b6001906b6001906b60019
06b6001906c8001906c8001906c8001906c8001906b6001906b60019046f
0019046f001906b60019064d001908950019046f0019046f001904ea0019
046f001906b60019051600190516001905450019075e001903cb001b03cb
001b03cb001b03cb001b03cb001b044b004b044b004b044b004b044b004b
044b004b044b007e044bff9f0461fff901f7006b01f7ff7801f7001a01f7
ff6301f7ff3701f7ff7601f7ff6d01f7ff7301f7000801f7007e0403006b
043a006e020bffdb020bffdb020bff6d03d7007e03d7007e03d7007e01f7
007e01f700320273007e01f7003f021c00140361007e0682007e044b007e
044b007e044b007e044b0063044b007e04faff96044b007e044d0048044d
0048044d0048044d0048044d0048044d0048044d0048044d0048044d0048
045a0048045a004806be0048044b007e044b007e044b004b02d8007e02d8
007e02d8fff202d8005703310049033100490331ffff0331000003310049
0331004905d4004905d400490470007f0211007e02c6001702e8001702c6
001702d6001b0510001704af001704af001704af001704af001704af0017
04af001704af001704af001704af001704af001705400017078a00170728
001707280017072800170728001707280017072800170728001707280017
0728001707280017044b0079044b0079044b0079044b0079044b005e044b
0079044b0079044b0079044b0079044b0079044b007903c9001605f60023
05f6002305f6002305f6002305f6002303ad002003ca001603ca001603ca
001603ca001603ca0016032e0045032e0045032e0003032e004503540066
037b005503a5005002bf003602f5005a0244003802f5003a02c7003a01d0
001c029c001802fb005a017a004f0184ffd902c0005a0176005a046c005a
02f9005a02f5003902f5005a02f5003a0200005a023a003c01fa001c02fb
005a02a50019041b002002a9002002a60017023a00340267000002840000
02a000000000fcfe0000fce3026800000284000002a000000000fcfe0000
fce20336000003690000039b00000000fc980000fc640336000003690000
039b00000000fc960000fc6501fc0000038e000003920000039600000000
fc6b0000fc6803510000030f0000036d0000038800000000fc890000fc6d
031f000003470000036e00000000fca10000fc7a03140000031c00000324
00000000fca80000fc9f029f000002a3000002a800000000fce20000fcde
02cf000002c2000002b5000003e3000004150000044500000000fc400000
fc0f01e2000001f7000001e2000001e200000000fd430000fd43026d0066
0000fd60028600660000fd5502020067022c000004d9001704d9ff72047c
008d0347008d049f002b03e7008d03e7fe9d03d30033050c008d050cfe7a
056900500222008d0222fe930222ff4f0460008d04c0001a06fe008d0545
008d03f0004d056900500569ff0f050c008d0442008d03c2004a03f6000c
042800100428fe4d04280010066900000468002106760077057200490572
fef30447000a0447000a0438008603120086040e0021038f0086038f0086
038f003e049c0086049c008604f6005502100086021000100210ff520405
0086041e00110648008604c700860393005704da005504da0055049c0086
03fd0086037a004e037b001b03cd000b03cd000b03cd000b05bb00000404
002605d8006e04e1005504e1005504ba004c04ba004c045d007e04520052
03bd000c0443000003a9004703a9004702ea0040045a007e045a007e045c
0050048f0004024a0079024a0000024aff7d024aff1d03d7007e03e40000
0482007e03c500160315003e031e0044044d0048044d004804a20020043e
0064045b0046034100490324000204630074046300740463007304630028
0598004205980044039b000905e7007605be004f05be004f028900000000
fd0403f400000000fc360224007d0224007d0224007d0235003602100054
0210005404d900170472008e047c008d0375008d0375008d0379008d0562
000a03e7008d03e7003f03e7004c06a9003a03db003e0537008d0537008d
0537008d0222008d0222ff4e02a600030481008d0481008d0508000a072a
000a06fe008d050c008d072c008d0569005005690050050a008d0442008d
043c004f03c8003f03f6000c046100080461000804e5001605ca00000468
00210543008d0507008d048e004d072d008d076a008d051d000c0663008d
046d008d044f0048044f004f074f008d049800400516000c050f000c051a
00000447000a041c0088043800860321008603210086033a008604b6000b
038f0086038f0024038f001e05d800310396004a04b0008604b0008604b0
0086021000860210ff5302690000040c0086040c00860461000306480086
049c008604da005504d700550497008603fd008603cb005a036f0043037b
001b03d6001703d60017045a001a054300000404002604ba008604900086
04320051066f008606960086049c001805d700860419008603e6005d03ee
0055068800860432004a048a001d0490001d0481000006430003066c0086
03f30047044200000443000003f5007e02d6007e02d6007e02f0007e01f7
ff6d04a80019044b004b0407004a0407004a0407004a05e50030036a003a
0474007e047400700474007e01f7006b01f7ff76020bffdb03f5007e03f5
007e043500140636001205b5004c045d007e065a007e044d004804490048
0446007e044b0079044b007e0359004803310049031e00090682007e03ca
001603ca001603f900160567004203ad0020047f007e044c007e03e80030
061b007e0650007e0477000905b2007e03f5007e037f003f0380004a0606
007e03fc002b046dfff90461fff90441001103a2000003a2000003a20000
0000fc950000fc95029b00e6029b009b029b009b03b5007303b5005303b5
0053040a0058026900cf02690091035e006d035500450210001702350036
023500a00223007d05b1007c0210006b021000170210006b02100017037b
0064037b001b037b0064037b001b02100017037b001b02c1005802c100a9
02c1005802c100a9044f0059044f0097044f0059044f009703700002033f
002003cd017003fc01870370001c033f003d0273003b0273003b03fcfff5
03fcfff5073e0083073e0083073e0083073e008303fcfff903fc00940224
007d0224007d027e006b027e00610299009d0299005702c0003602c00069
0259006d025900630277009202770065027e006b027e00610299009d0299
005702c0003602c0006903fc008603fc006003fc006103fc005604c80052
045d005703fc001e03fc003901de00790382007905a30000057600000841
000007300000074400000730000006ad009e06ad009e040e006905c30032
05d9004f02bd000003fc002104b6003c040e002003fc0049040e00520458
004c03fc00a903fc0044040e004c03fc0063044d0015040e001d03df002d
039f005503f8004f039f0054039f000506350039085e008d03fc001c073f
00860437001a04a8004e02de001903f2004f03f000430460001e03e9004f
0442006603be002f0440004d04420047040e0039040e0094040e0058040e
0055040e001a040e0060040e0054040e0051040e003d040e004204740058
02ad001c03a000510385004d03d30024038a005f03ce0058035f002503d4
003a03dc0046039f0037039f0079039f0050039f0053039f002d039f0062
039f0045039f0047039f0038039f003804a8004e02de001903f2004f03f0
00430444001e03e9004f0442006603be002f0440004d04420047040e0039
040e0094040e0058040e0055040e0024040e0060040e0054040e0051040e
003d040e0042032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c70047032f003d0205001d02b4003e02b0003802ed002302b20043
02e4004b029d002e02ed003c02e4003602d7003b02d0003a02c7004b01c7
004d01c7004702b5002f02050025027000300274002302750010026a0031
027a002a0261001d028b001e026e001b02b5002f02050025027000300274
002302750010026a0031027a002a0261001d028b001e026e001b02d8ff2e
032c003805870038059400380543003805940038055a00380592003805fa
004205fa0042059d003b05eb003b05e8003b0607002305b1004405e80044
0570002c05d50039087e0039057c004607ed004603fc003403fc003703fc
005403fc002203fc005303fc005403fc005103fc004403fc006603fc0045
03fc005503fc005603fc002f05e9002c0439002206b40059044c004c0301
000e03fcfffe049f002b057200490482007e064200530467005304450036
073e0092073e0087073e00b6073e00b606b7007606b7010806b7007606b7
01080a7b00920626007d0466002801da000001da00000466000004660000
0466ffdb0466ffde04660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601a8
04d9001704d9001704d9001704d9000504d9001704d9001704d9001704d9
001704d9001704d9001704d9001704d9001703e7008d03e7008d03e70047
03e7ffe803e7ffbd03e7ffdd03e7ffdd03e700460222002c022200880569
0050056900500569005005690050056900500569005005690050061e0050
05940050059400500594005005940050059400500539008c0539008c0617
008c0617008c0617008c0617008c0617008c0617008c0428001004280010
0428001003f3004703f3004703f3ffca03f3ff9a03f3ffca03f3ffc503f3
004703f3ffc503f3ffc903f3ffc803f3ffc503f300470407004a0407004a
040700300407ffdb0407ffb60407ffd90407ffd90407004a01f7001c01f7
006b044d0048044d0048044dfff2044dffd2044dffef044dfff2044d0048
051000480510004805100048051000480510004805100048044b0079044b
0079052e0079052e0079052e0079052e0079052e005e052e007903ca0016
03ca001603ca0016048d004b046600380447000a0447000a0447ffe80447
ffc30447ffe80447ffe80447000a0447fff10447fff20447fff20447ffef
0447000a038f0086038f0086038f0000038fffa8038fff83038fffa8038f
ffa8038f00410210001c0210007f04da005504da005504da003e04da0019
04da003e04da003804da0055058b0055058b0055058b0055058b0055058b
0055058b005504ac008404ac0084058a0084058a0084058a0084058a0084
058a0084058a008403cd000b03cd000b03cd000b01da0000046600000466
ffdb04660000046600000466000004660000046600000466000004c10066
0540008d0545008d0536008d04b5008604c3008604b5008603f6000c02c6
0017037b001b01f70008046f0019046f0019046f001906b6001906b60019
06b6001903130018030a007803160054036b007802b7007802920078037c
00550367007801b000780205002802f4007802670078049a007803920078
03a1005502f4007803a10055030d00780288003a02b0001e0378006e0313
001804a1002802c9001802ac0011025d001b0000fdfc0000fdfc0466010c
0466010c0466007e0466007e03c1000003c10000030c0000030c0000030c
0000030c0000022c0000022c000001ff000001ff000001ff000001ff0000
0000fcff0000fcff02aa006902aa006902aa009802aa009801ce000002aa
008202aa008202aa008202aa0082027f0050027f006a0324ffeb02910084
0466010c02aa001402aa0013033600000336000003140000030c0000038e
0000031f000003fcfff903fcfff9038e0000038e00000000fedd0000fe4a
0000fdfa0000fdfa0000fe290000fe290000fdae0000fdae01ce000002aa
00140291008302aa001502aa000002aa0000039a0000039a00000000fdfd
0000fdfd0000fd090000fd090000fd090000fd0902aa000002aa000003fc
fff90466007e02aa0098038e0000038e0000038e0000038e0000038e0000
038e000004010014040101470000000002aa000002aa000001ce000001ce
0000030c0000030c000002aa000002aa00c802aa00c803f100c801ce0000
01ce000001e2000001e2000002aa00a003b1008402aa000002aa0000075c
003c075c0000075c0000075c0000075c0000075c003f06d2000006d20000
075c0000075c0000075c004001df002001df002001e7002401e7002400f8
002f00f8002f02070022020700220209003702090037019d0028019d0028
020700230207002302090039020900390309003803090038015f003d015f
003d015200100152001001c3000601c3000601bf000801bf000803270025
0327002503270025032700250000ff9203bd0000041a0000041a00000416
ffe40416ffe4041a000b041a000b041a000b041a000b0401ffff0401ffff
0401ffff0401ffff015f003d02aa000001ce000003f100c8055800190472
008e049300140433003104db004f051d000f05e700190472003b03e7005b
0543005003f1005503acffd60573004904ba00110266008d026800110464
008d071c008c0545ffd605690050066a004f051e00190481008d03cf003f
03c2004a045c001903f6000c057200490539008c0465001003d3003303eb
003e03f10046040e004e08de008d0839008d0629008d056d008d07eb008d
0750008d04d900170222ff43056900500539008c0539008c0539008c0539
008c0539008c04d9001704d900170634ffd3052900490519004904600073
056900500569005003eb000008c5008d0839008d051900490714008d04e6
008d0545008d04d9ffed04d9001703e7ffcd03e700550222feac0222ff5c
0569003b056900500481ffbf04810078053900390539008c03eb003e050c
008d0523008d0439004603ec003304d9001703e7008d0569005005690050
05690050056900500428001004d9ffde0446ffda03850011040affab0382
003b0496000b055e000f04c0001a03e8ff9102c30003050f004f049d000f
04b4000704d90017047c008d047c008d047c008d043c004f050b008d050b
008d050b008d050b008d050b008d03e7007a03e7007a03e7008203e7003e
03e7008003ac008d05190049050c008d050c008d050c008d050c0015050c
008d0222ff460222ff7e0460008d0460008d0460008d0362008d03620035
036200600362006606fe008d06fe008d06fe008d0545008d0545008d0545
008d0545008d056900500569005005690050056900500442008d0442008d
0481008d0481008d0481008d0481008d03c8003f03c8003f03c8003f03c8
003f03c8003f03f6000c03f6000c03f6000c03f6000c0539008c0539008c
0539008c0539008c0539008c04bb001604bb00160740002b0740002b0468
0021046800210428001003d3003303d3003303d300330390002403e40012
046300110481008d0562008d04cc008d03f50033043c003003ac004903e9
008d04920029044b007e045ffffb03b60048044b004b0443004a0288fff8
066e007e044b007e03d7007e0281001b03e40005044b007e05870048044b
007e033a004602ed001702c60017041c0014032e004503d5003e03740026
0362003d0779004b0402007e0656007e03f3004701f7ff61044d0048044b
0079044b0079044b0079044b0079044b00790407005103f3004703f30047
063300470474ffde03cb001b03d70042044d0048044d004803a9001c020b
ff6b0779004b03cb001b044b007e03f3ffc003f300470407ffe30407004a
01f7fecf01f7ff73044dffee044d004802d8ff7402d80011044b0000044b
007903a9002a044b005104db004b041f0048033a004503f300470407004a
044d0048044d0048044d0048044d004803ca001602a4007804fc007e02cf
0017069d004b069f004b0362ffe103310049032e0045037a003b03fb0030
0260000502600005044b004b0308001003f2000c03910035040e00580325
003c021d009903d9009904b30098029b00e603f30047044b007e044b007e
044b007e03590048044b004b044b004b044b004b044b004b044b004b0407
004a0407004a0407004a040700480407004a0288001903cb001b044b007e
044b007e044b0067044bffff044b007e01f7ff3501f7ff3501f7ff6903d7
007e03d7007e03d7006b01f7007201f7ff6d01f7ff6d01f7ff620682007e
0682007e0682007e044b007e044b007e044b007e044b007e044d0048044d
0048044d0048044d0048044b007e044b007e02d8007e02d8007302d8000d
02d8fffa033100490331004903310049033100030331004902c6001702c6
001702c6ffde02c6ffde044b0079044b004d044b0079044b005a044b0079
03c9001603c9001605f6002305f6002303ad002003ad002003ca0016032e
0001032e0045032e0008044b007e02c6ffa805f6002303ca001603f30047
021100490290002403f3001a02f9ff970488007e042d007e033d004503f4
00170363003802ee0027034e007e0599004204f60005041c0088042b000a
03cb00400429005a049f0019054f0005041c0041038f006204d200550396
00540358ffd304bb0058042b00140278008602fcffed0405008606900082
04c7ffd304da00550622005504bb000504250086036f0045037a004e03d9
0005037b001b04e1005504ac008403f9000b038f003e038a004b038a0055
0385004108030086088f008d05b300860617008d06cf00860768008d0447
000a0210ff4704aa005504ac008404ac008404ac008404ac008404ac0084
0447000a0447000a055cffe2049c0058049c00580405004804da005504da
0055038a000008030086088f008d049c005806b3008604a0008604c70086
0447ffc50447000a038fff9d038f004d0210feb20210ff7004da000904da
00550425ff9a0425006904acfff704ac0084038a004b049c008604c30086
04060056038f003e0447000a038f008604da005504da005504da005504da
005503cd000b0447000a03cb005402fc0000037b001b033300320438001e
04ac00000435001b038f00180269000004ad00550425000003cdfff3039f
00500333001e023000a0040600a004a90064026900cf0447000a04380086
043800860438007803cb005a049100860491008604910086049100860491
0086038f0029038f002e038f0050038f001e038f004603580086049c0058
049c0086049c0086049c0086049c0009049c00860210ff3e0210ff550405
0086040500860405008602fc008602fc000002fc002802fc001e06480086
064800860648008604c7008604c7008604c7008604c7008604da005504da
005504da005504da005503fd008603fd008604250086042500860425005c
04250086036f0043036f0043036f002c036ffff7036f0043037b001b037b
001b037b001b037b001b04ac008404ac008404ac008404ac008404ac0084
0435001b0435001b068a002b068a002b040400260404002603cd000b038f
000f038f003e038f0038049c0086037b000a068a002b03cd000b0447000a
02fc00000355ff9c03fd000004250086052f0086044700860390003e03cb
00400358004e040a0086047f0019047f001904c40019047f0019046f0019
046f0019047f0019049600190496001906b5001906b5001906d6001906b5
001906b6001906b6001906b5001906d2001904ce001904ad001704af0017
04af001704af001704af001704af001704af001704af001704af00170727
001707280017072800170728001707280017072800170728001707280017
0728001703f3007d044b004b044c007f044b007e0363003803880048044b
004b0461004b040700510407005105240054036a0042036a003a044f003a
043700480255000c045e004b044a004b044a004803d4001203e0000c044b
0079044b007d044b007e026b0010026b0010024a007901f7007e03270013
033800130204007904ab007e06820079068200790682007e044bffc7044b
007e0468007e0449004805c1004805a700440598004202d8001d02d8001d
02d9001d02d8007e02d8007e02a0007902a0001603ea007e03ea007e0331
004901eeffc20246ffee01eeffc2029fffae02c6003802c6002604b10010
04ad00520441007403c9001605f6002303ca001603b4000e0338004503d5
004503a9002a03ae002a0382003b038200480382003b03590048052d0050
03f5007e0437004204540048045d007e02a4ffaf03d7001c033c007e0460
004b0382003b0382004806b4004b06fd004b075b004b0522001704060017
059f00170662001904f4007a04be007e0433002c03ef0057045dffd3045e
ffd30427000a0577ffda063300510425000a03bb005a0462008604620012
03600086036a003a01f7006a026d001c03e2008602fa002005b5004c0474
007e04a8005703bb0044048a004e0489004e0528000806be005203b90044
044d0048044d004803db008603f6003403f600860355001b04860082046f
004e05e300440497006204090019063b0026036e003e035c003a03310041
03f40012030c008603eb000a0475008603db008605a40072044a00180313
00180417000a030a00780327001e036b007802b7007802b70046037c0055
0367007801b000780205002802f4007802670078049a007803920078038d
007803a1005502f9004c02f40078030d007802b0001e0378006e04a10028
02bf003602ac004702f5003a042c003602f5005a02f5003a02c7003a02b8
002e027b003802770038029c0018017a004f02c0005a046c005a02f9005a
02f500390244002a02e6003902e6003902f5005a01fa001c02fb005a02db
0044046c005a02a5001902a7001c02f2005a027e001002dc003703d1004d
02c2002f017a004f0200005a02fb005a02a5001902f2005a027e001002ed
005203d1004d02c2002f069b007904df000e04da004b032d000e07730014
0552001404bc000703660014033d001403ec0014032d00140370001403cb
001b032d006403e2003606af0017026c0013029d00130474000104e20012
04d40012044b007e04ae004b02a8001905b5004b046b007e0247007306d7
007e04a0007e044b007e02d8007303ad0049036cffc203d30016042e0020
0352004504b8004704d2004b046a004b0411004a03880042036a003a0411
00510276006b0363003801eeffc204c80079038b004002e5004e02440038
026e003802e000390277003401d0001c01c1fffb029c001802fb005a01f7
001401b20052017a005c01f80014022d000001bc005c01b3005c0248005c
046c005a046c005a032c0000032c005a0322006402f5003903b70039023a
003c020a000c0213001c035700160330004102eb005202e4005202c10017
023a0034029e003402ca003402a200300316004002fb005a02fb005a0184
ffd90200005a01f60022020c002202b4005a041b002002a6001701c40035
034300280210006b021000170210006a01ce000001ce00000299004b0299
005e03fc004403fc0066044b0032044b0032025100000268000002670000
02510000032700000267000002680000023900980239009801ce000001ce
000002aa008202aa008202aa008202aa008202aa001e02aa009302aa0016
0176005a023a003c02a900200299005e0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203360000049a0084037b001b02aa008502aa008502aa00c802aa
00c8029f00660267000003c1004703e30000038e0000023500a002aa0000
02aa000002aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402bf003602b8003a02f50039
02a9002002c7003d01d9000001d9000001d9000001d90000028900000289
00000289000002890000038e0000038e0000032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
ffff0324ffff03f4000003f4000003f4000003f400000324000003240000
031f00000314000001ff000001d90000031f0000031f0000031f0000031f
00000314000003140000031400000314000003f4000003f4000003f40000
03f40000027f006a027f006a05690050043c004f0456003a043c004f0456
003a042f0008042ffe46042f000803ac008d05690050046b000c05be008d
04cc000c0433004f0442008d044a0054039400480394003c04b8001204d7
002606c50019043a0060043efff00359004803630038035900480363002e
05a1004603920079044d004803c7000c04ee007e04d0000e03470049020b
ffdb045fffab04e4002604d7005503cb005a03cb004003cb005a03cb003d
040a001e040afe33040a001e0358008604c4005004540032055400860474
00370407005503fd008604d9ff9404d9fe4e04d9fe2604d9feed04d9ff9e
04d9fe5904d9fe3004d9feec04d9ff5004d9ff2604d9001704d9001704d9
001704d9ff9404d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe30
04d9feec06a4001706a4ff9406a4fe5806a4fe3006a4feed06a4ff9406a4
fe5906a4fe3006a4feec03e7feba04eafe7404eafe6c03e7feba04eafe74
04eafe6b03e7fe6703e7fe5d050cfeba060ffe74060ffe6d05c7fece050c
feba060ffe74060ffe6d05c7fecc050cfe68050cfe5c050c008d050cfeba
060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c05c7fecc06c2
008d06c2feba07c5fe7407c5fe6c077dfecd06c2feba07c5fe7407c5fe6c
077dfecc0222feba0325fe740325fe6d02ddfecd0222feba0325fe740325
fe6d0222fecc0222fe670222fe5d0222ff5b0222ff800569fede0636fe74
0636fe420569fede0636fe730636fe440569fe9b0569fe5e0442feba0428
fe620591fe740591fe9c0591ff230428fe000428fe1c0428001004280010
0572ff05063efe91063efe5a05f3fed50572fefc063efe91063efe5b05fa
fed40572feb10572fe7a057200490572ff05063efe7c063efe5005fafecf
0572fef1063efe7f063efe5005fafece074400490744ff050810fe7c0810
fe5007ccfecf0744fef10810fe7f0810fe5007ccfece04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c03a9004703a9004703a9004503a9004703a9004703a9004703a90047
03a90047045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a007e045a007e045a007e045a005d045a007e045a007e045a007e
045a007e045a007e045a007e045a007e045a007e045a007e045a007e045a
007e045a005d024a000b024aff86024aff83024aff6c024a000a024aff86
024aff86024aff69024aff14024aff14024aff60024affef024aff7b024a
ff32024aff69024aff68044d0048044d0048044d0048044d0048044d0048
044d0048044d0048044d0048043e0064043e006404630074046300740463
007404630074046300740463007404630074046300740463000804630009
04630074046300740463007404630053046300710463007405be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f05be004f
05be004f05be004f05be004f05be004f05be004f05be004f05be004f05be
004f05be004f05be004f05be004f05be004f05be004f05be004f0447000a
0447000a0447000a0447000a0447000a0447000a0447000a0447000a0447
000a0447000a0447000a0447000a0447000a0447000a0447000a0447000a
0447000a0447000a0447000a0447000a0447000a0447000a060c000a0616
000a0616000a0616000a0616000a0616000a0616000a0616000a0616000a
038f0086038f0059038f0041038f0086038f0059038f0041038f0086038f
006f049c0086049c0086049c0086049c0086049c0086049c0086049c0086
049c0086049c0086049c0086049c0086049c0086049c0086049c0086049c
0086049c0086049c0086049c0086049c0086049c0086064a008606590086
065900860659008606590086065900860659008606590086065900860210
00250210ff8b0210ff720210ff7b0210001a0210ff8b0210ff720210ff70
0210ff0e0210ff0f0210ff77021000090210ffa00210ff420210ff660210
ff7b04da005504da005504da005504da005504da005504da005504da0055
04da005503fd008603fd008603cd000b040a001e03cd000b040a001e03cd
000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a001e
03cd000b040a001e03cd000b040a001e03cd000b040a001e03cd000b040a
001e03cd000b040a001e03cd000b040a001e03cd000b040a001e04e10055
04e1005504e1005504e1005504e1005504e1005504e1005504e1005504e1
005504e1005504e1005504e1005504e1005504e1005504e1005504e10055
04e1005504e1005504e1005504e100550696005506a0005506a0005506a0
005506a0005506a0005506a0005506a0005506a0005504d9001704d9ff94
04d9fe5804d9fe3004d9feed04d9ff9404d9fe5904d9fe3004d9feec050c
008d050cfeba060ffe74060ffe6c05c7fecd050cfeba060ffe74060ffe6c
05c7fecc057200490572ff05063efe7c063efe500572fe470572fef1063e
fe7f063efe500572fe4606a4001706a4ff9406a4fe5806a4fe3006a4feed
06a4ff9406a4fe5906a4fe3006a4feec06c2008d06c2feba07c5fe7407c5
fe6c077dfecd06c2feba07c5fe7407c5fe6c077dfecc074400490744ff05
0810fe7c0810fe5007ccfecf0744fef10810fe7f0810fe5007ccfece01d9
000001d900000289000002890000039a0000032900000329000003240000
03290000032900000324ffff03f4000003f400000324000001d90000031f
0000031400000232009d01ef009d01ef009d01ef009d0588008d048b000f
0442008d03870010046f008d071a003a03db003e04f4008d04b3008d049c
0010052b000c0562008d05d2008d0758008d05470050043c004f03f6000c
042800100428001004d700210605000c04cb004d048e004d048e008d063d
001e063d001e0222008d06a9003a04ac008d0558000a050c008d055d008d
048e004d074f008d04d9001704d900170634ffd303e70045054300500543
005006a9003a03db000b03eb003e0537008d0537008d0569005005690050
05690050044f0026046100080461000804610008048e004d036a008d0663
008d0387001004c7002004680021046d00280689003c0600002904360029
0710000a0714008d052600490513000c03f100550544000a04b6007e0407
000c044b007e0306001003a7007e063e0030036a003a044b007e043b007e
04170010048d000c0494007e04f5007e05f4007e0483004803590048031d
000903cf001003cf00100402002004e60009043e004e0406004e0406007e
050500160505001605e500300410007e04770014045c007e049e007e0406
004e05e1000f0222008d03f3000d03f30047063300470407003504070051
0407005105e50030036afffd03a9002a0474007e0474007e044d0048044d
0048044d0048037ffffb03ca001603ca001603ca001603e8002602d6007e
05b2007e0306001003fe002003ad0020044b004b063b004b0573002a03ca
002a063000140657007e045d004804850009036a0042046e001404f90086
0419000003fd00860321ffff04420086062200310396004a04380086043e
0086040c000004a9001b04d0008605390086068e008604d1005503cb005a
037b001b03cd000b03cd000b045a0026054f00190465005104320051045c
008605e1002005e100200210008605d800310440008604aa0003049c0086
04e6008604320051069300860447000a0447000a058fffe2038f004e04c7
005004c7005005d8003103960003038a004b04b0008604b0008604da0055
04d7005504d7005503e6001e03d6001703d6001703d600170432004e0321
008605d7008603210000045b0026040400260419003805fc00380580004a
0417004a063400030670008604c400580486001b03960053049200030400
000008000000040000000800000002af00000200000001550000040e0000
01bc00000199000001000000000000000000ffdc0000ff25040e0024040e
002403d9009903fefff90210006a037b006401b700280343002804c50028
04b200e603fcfffa0290003a052b0050045a004f043c004f03b60010040e
00600682007e05830020075c008d061b008d0799002c061d0098047c0012
03f6000c08ee001e047dfffb04bb002004e1004904fa002804270024043c
004f0635003906210034057800e6059d00e603fc0053070100bc03fc0056
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff60711008a045d003f047c008d040e003f04a60016055800560407000e
0682007904390048042bfffc035c003503ce000604510059033a00100327
000003270000032700000254000002540000025400000254000002aaff65
02aaff6504e0004607f4000a07e2fff70798ffe307920056063f008d0535
000a0728002905d2002007a8008d03f2000a0676007704e5001608ca0050
05b9005007920056079200560424004f05c100230539007e0495000e064f
007e0502001c06ba007e0366000c05e7007603f9ffd307a8004804b00048
065c004b05c100230342004906c3005505f600860497000a066300860552
003107000086038c000a05d8006e0470001a087a00550527005506c30055
06c3005503cb005a03c7009602aa00cf040e005b0000ffdc0000fe5101cf
0000025900a501c70000017a004f030cff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bd000002aaff65
055001c4027f006303240000039a0000025600000289001e000000d40000
00de0284001e032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000036d00000000000004150000031c0000036d0000
036d00000392000003470000034700000392000003920000035400000369
0000000000840000003f0000fffa00000075000000750000007500000075
000000750594fe6e0594fe910594ff15042ffe04042ffe15042f0008042f
00080447000a0447000a0447000a060c000a060c000a060c000a049c0086
049c0086049c0086064a0086064a0086064a008603cdffec03cdffec03cd
000b04e1005504e1005504e1005506a0005506a0005506a000550000fd7a
0000fd4f0000fd5a0000fd5a0000fbfe0000fc010000fbdc0000fbda0000
fbfe0000fbfc0000fbfe0000fbfc0000fbff0000fbff0000fc000000fc00
0000fc000000fc000000fbfd0000fbfd0000fda80000fc2e0000fc2e0000
fd0a0000fd0a0000fc7d0000fc7e0000fbe30000fbe30000fcac0000fcac
0000fcaa0000fca90000fd4f0000fd4f0000fd340000fd340000fd330000
fd330000fd470000fd470000fd760000fd760000fd450000fd600000fd60
0000fd600000fd600000fd340000fd6d0000fc8a0000fd6e0000fd0a0000
fcf10000fcf10000fc970000fc990000fca90000fca90000fc700000fca3
0000fc2e0000fc2f0000fc6d0000fc6d0000fd530000fcf10000fd6d0000
fcf30000fcde0000fcde0000fc660000fc650000fcdd0000fcdd0000fc2e
0000fc7e0000fd760000fc700000fc700000fc6b0000fc6b0000fc700000
fc710000fc460000fd7a0000fced0000fce70000fd450000fd450000fca8
0000fca80000fcde0000fd9f0000fdaf0000fcfb0000fd530000fd530000
fd420000fd420000fd7e0000fcde0000fcde0000fcde0000fc8f0000fc53
0000fc530000fc530000fc530000fc920000fc980000fc980000fc530000
fc530000fcbf0000fd650000fd650000fd620000fd620000fde60000fde6
0000fd510000fd510000fd630000fd630000fd800000fd7f0000fd510000
fd510000fd6a0000fd6a0000fce90000fce90000fdc00000fdc00000fd8a
0000fd8a0000fd570000fd570000fd5b0000fd5b0000fcc30000fcc30000
fcc30000fcc30000fc720000fc3c0000fc3c0000fc010000fc010000fc4e
0000fc4e0000fc130000fc130000fc0e0000fc0e0000fc4a0000fc4a0000
fdb50000fcd10000fd9f0000fcf60000fd4c0000fd4c0000fd470000fd47
0000fd2f0000fd2f0000fccd0000fccd0000fc700000fc710000fcb20000
fcb20000fc960000fc970000fca50000fca50000fcb20000fcb20000fc96
0000fc950000fc9f0000fc9f0000fc380000fc380000fc380000fc380000
fc9f0000fc9f0000fca30000fca90000fd470000fd4c0000fca40000fca4
0000fca40000fca40000fca90000fca80000fcaa0000fcaa0000fc380000
fc380000fc380000fc380000fd6d0000fd6d0000fc9f0000fca40000fca4
0000fd050000fd050000fd0d0000fd0d0000fc430000fc43042ffe62040a
000a040a000a040a001e01f70072044b004b044b004b044b004b044b004b
046f001906b600190aa000b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b400b400b400b400b400b400b400b400b4
00b400b400b400b400b400b400b4000000>
<000000000000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000013c0000013c0000013c0000013c0000013c0000013c
0000013c0000013c0000013c0000013c0000013c0000013c0000013c0000
013c0000013c0000026a0000026a0000026a0000026a0000026a0000026a
0000026a0000026a0000026a0000026a0000026a0000026a0000026a0000
026a0000026a0000026a0000026a0000026a0000026a0000026a0000026a
0000026a0000026a0000026a0000026a0000026a0000026a0000026a0000
026a0000026a000003f20000055600000556000005560000055600000556
000005560000055600000556000005560000055600000556000005560000
055600000556000005560000055600000556000005560000055600000556
0000055600000556000005560000055600000556000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000006ce000006ce000006ce0000
06ce000006ce000006ce000006ce000006ce000006ce000006ce000006ce
000006ce000006ce000006ce000006ce000008a6000008a6000008a60000
08a6000008a6000008a6000008a6000008a6000008a6000008a6000008a6
000008a6000008a6000009ea000009ea000009ea000009ea000009ea0000
09ea000009ea000009ea000009ea000009ea000009ea000009ea000009ea
000009ea000009ea00000b8200000b8200000b8200000b8200000b820000
0b8200000b8200000b8200000b8200000b8200000b8200000b8200000b82
00000b8200000b8200000b8200000b8200000b8200000b8200000b820000
0b8200000b8200000b8200000b8200000b8200000b8200000b8200000b82
00000b8200000b8200000b8200000b8200000b8200000b8200000b820000
0b8200000b8200000b8200000b8200000b8200000b8200000b8200000b82
00000b8200000b8200000b8200000b8200000b8200000b8200000b820000
0d8e00000d8e00000d8e00000d8e00000d8e00000d8e00000d8e00000d8e
00000d8e00000d8e00000d8e00000d8e00000d8e00000e3800000e380000
0e3800000e3800000e3800000e3800000e3800000e3800000e3800000e38
00000e3800000e3800000e3800000e3800000e3800000e3800000e380000
0e3800000e3800000e3800000e3800000e3800000e3800000e3800000fbc
000010ca000010ca000010ca000010ca000010ca000010ca000010ca0000
11b0000011b0000011b0000011b0000011b0000011b0000011b0000011b0
000011b0000011b0000011b0000011b0000011b0000011b0000011b00000
12ae000012ae000012ae000012ae00001454000014540000145400001454
000014540000145400001454000014540000145400001454000015820000
158200001582000015820000158200001582000015820000158200001582
000015820000158200001582000015820000158200001582000015820000
158200001582000015820000158200001582000015820000158200001582
0000158200001582000015820000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a0000167a0000167a0000167a0000167a0000167a0000167a0000
167a0000167a0000167a0000167a0000167a0000167a0000167a0000167a
0000167a000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000017b6000017b60000
17b6000017b6000017b6000017b6000017b6000017b6000017b6000017b6
000017b6000017b6000017b6000017b6000017b6000100000f2201200010
00bd000700020010002f006000000c630141000400010000000e00ae0000
00030000000000640000000000030000000700fa00640001000000000000
0032015e0001000000000003001301900001000000000004001301a30001
000000000006001301b60001000000000007007d01c90003000104090000
006402460003000104090001001c02aa0003000104090002000e02c60003
000104090003002602d40003000104090004002602fa0003000104090006
00260320000300010409000700fa034600a9002000320030003000380020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006c00690062007200690020006900730020006500690074006800650072
002000610020007200650067006900730074006500720065006400200074
0072006100640065006d00610072006b0020006f00720020006100200074
0072006100640065006d00610072006b0020006f00660020004d00690063
0072006f0073006f0066007400200043006f00720070006f007200610074
0069006f006e00200069006e002000740068006500200055006e00690074
00650064002000530074006100740065007300200061006e0064002f006f
00720020006f007400680065007200200063006f0075006e007400720069
00650073002ea92032303038204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e4b414f49
44492b43616c696272692d426f6c644b414f4944492b43616c696272692d
426f6c644b414f4944492b43616c696272692d426f6c6443616c69627269
20697320656974686572206120726567697374657265642074726164656d
61726b206f7220612074726164656d61726b206f66204d6963726f736f66
7420436f72706f726174696f6e20696e2074686520556e69746564205374
6174657320616e642f6f72206f7468657220636f756e74726965732e00a9
002000320030003000380020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e004b0041004f004900440049002b00430061006c0069
0062007200690052006500670075006c00610072004b0041004f00490044
0049002b00430061006c0069006200720069002d0042006f006c0064004b
0041004f004900440049002b00430061006c0069006200720069002d0042
006f006c0064004b0041004f004900440049002b00430061006c00690062
00720069002d0042006f006c006400430061006c00690062007200690020
006900730020006500690074006800650072002000610020007200650067
0069007300740065007200650064002000740072006100640065006d0061
0072006b0020006f007200200061002000740072006100640065006d0061
0072006b0020006f00660020004d006900630072006f0073006f00660074
00200043006f00720070006f0072006100740069006f006e00200069006e
002000740068006500200055006e00690074006500640020005300740061
00740065007300200061006e0064002f006f00720020006f007400680065
007200200063006f0075006e00740072006900650073002e0000b10903b8
02f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5
b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e
2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1f
b802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802
e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b2
1e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d19
1fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb8
02dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7
b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d
2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1f
b802ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802
cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b2
1d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f
1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb8
02bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9
b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d
2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321f
b802b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802
acb21c331fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b2
1c321fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c32
1fb802a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8
029fb21c331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029b
b21c311fb8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c
321fb80296b21c321fb80295b21c331fb80294b21c331fb80293b21c331f
b80292b21c331fb80291b21c331fb80290b21c331fb8028fb21c331fb802
8eb21c311fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab2
1c321fb80289b21c321fb80288b21c331fb80287b21c331fb80286b21c33
1fb80285b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb8
0281b21b341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027d
b21b341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b
341fb80278b21b341fb80277b21b341fb80276b21b341fb80275b21b341f
b80274b21b341fb80273b21b341fb80272b21b341fb80271b21b341fb802
70b21b341fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb2
1a351fb8026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a35
1fb80267b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb8
0263b21a351fb80262b21a351fb80261b21a351fb80260b21a351fb8025f
b21a351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a
351fb8025ab21a351fb80259b219371fb80258b219371fb80257b219371f
b80256b219371fb80255b219371fb80254b219371fb80253b219371fb802
52b219371fb80251b219371fb80250b219371fb8024fb219371fb8024eb2
19371fb8024db219371fb8024cb219371fb8024bb219371fb8024ab21937
1fb80249b219371fb80248b219371fb80247b219371fb80246b219371fb8
0245b219371fb80244b219371fb80243b219371fb80242b219371fb80241
b219371fb80240b219371fb8023fb219371fb8023eb219371fb8023db219
371fb8023cb219371fb8023bb219371fb8023ab219371fb80239b218391f
b80238b218391fb80237b218391fb80236b218391fb80235b218391fb802
34b218391fb80233b218391fb80232b218391fb80231b218391fb80230b2
18391fb80301b2182e1fb8022fb218391fb8022eb218391fb8022db21839
1fb8022cb218391fb8022bb218391fb8022ab218391fb80229b218391fb8
0228b218391fb80227b218391fb80226b218391fb80225b2173b1fb80224
b2173b1fb80223b217321fb80222b2173a1fb80221b2173b1fb80220b217
3b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1f
b8021bb2173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb802
17b2173b1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2
173b1fb80212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b
1fb8020eb2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8
020ab2173b1fb80209b217321fb80208b217321fb80207b2173b1fb80206
b2173b1fb80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b217
3b1fb80201b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1f
b801fdb2173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801
f9b2173b1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2
173b1fb801f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b
1fb801f0b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb8
01ecb2173b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8
b2173b1fb801e7b217321fb801e6b216231fb801e5b216231fb801e4b216
371fb801e3b216371fb801e2b216381fb801e1b216381fb801e0b216431f
b801dfb216441fb801deb216441fb801ddb216441fb801dcb216451fb801
dbb216461fb801dab216461fb801d9b216461fb801d8b216231fb801d7b2
16231fb801d6b216381fb801d5b216431fb801d4b216431fb801d3b21643
1fb801d2b216441fb801d1b216461fb801d0b216461fb801cfb216461fb8
01ceb216461fb801cdb216461fb801ccb216461fb801cbb216431fb801ca
b216231fb801c9b216231fb801c8b216371fb801c7b216371fb801c6b216
381fb801c5b216421fb801c4b216431fb801c3b216441fb801c2b216451f
b801c1b216461fb801c0b216461fb801bfb216461fb801beb216461fb801
bdb216461fb801bcb216461fb801bbb216461fb801bab216371fb801b9b2
16381fb801b8b216421fb801b7b216431fb801b6b216431fb801b5b21643
1fb801b4b216441fb801b3b216441fb801b2b216441fb801b1b216451fb8
01b0b216451fb801afb216451fb801aeb216461fb801adb216461fb801ac
b216461fb801abb216461fb801aab216461fb801a9b215341fb801a8b215
411fb801a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1f
b801a3b215521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb801
9fb2154f1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2
154d1fb8019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f
1fb80196b215501fb80195b215521fb80194b215521fb80193b215521fb8
0192b215411fb80191b2154f1fb80190b215501fb8018fb215501fb8018e
b215511fb8018db215521fb8018cb215521fb8018bb215521fb8018ab214
581fb80189b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1f
b80185b2145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb801
8140af145d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1f
bf0b561fb20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b
561fab0b561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561f
a40b561fa30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a
681f990a681f980a681f970a681f960a681f950a681f940a681f930a681f
920a681f910a681f9009681f8f09681f8e09681f8d09681f8c09681f4109
02fc02fa0056001f02fb02fa0068001f017fb213321fb8017eb212371fb8
0174b212371fb80173b211421fb80172b211421fb80171b211421fb80170
b211421fb8016fb211421fb8016eb211421fb8016db211421fb8016cb211
421fb8016bb211421fb8016ab211421fb8013cb211421fb8013bb210421f
b8013ab210421fb80139b210421fb80138b210421fb80137b210421fb801
36b210421fb80135b210421fb80134b210421fb80133b210421fb80132b2
0f451fb80131b20f451fb80130b20f451fb80112b20f451fb80111b20f45
1fb80110b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8
010cb20e481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108
b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a
1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb
0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b56
1fbb0b561fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab21140
1fb80179b211421fb80178b211421fb80177b211421fb80176b211421fb8
0175b211421fb80143b211421fb80142b210421fb80141b210421fb80140
b210421fb8013fb210421fb8013eb210421fb8013db20f451fb80115b20f
451fb80114b20f451fb80113b20f451fb903030302b2401fa4be030200b4
030200c4030200030300b213321fb8017bb213321fb80153b212371fb801
52b211401fb80151b211401fb80150b211401fb8014fb211401fb8014eb2
11401fb8014db211401fb8014cb211401fb8014bb211401fb8014ab21140
1fb80149b211401fb80148b211401fb80147b211401fb80146b211401fb8
0145b211401fb80144b211401fb80122b211401fb80121b210421fb80120
b210421fb8011fb210421fb8011eb210421fb8011db210421fb8011cb210
421fb8011bb210421fb8011ab210421fb80119b210421fb80118b20f451f
b80117b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f45
1ff90e481ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff2
0d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a
1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc7
0c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b56
1fb50b561fb40b561fb30b561f9b0a681fb802fdb212371fb8017db21237
1fb8017cb212371fb80169b2112e1fb80168b2112e1fb80167b211401fb8
0166b211401fb80165b211401fb80164b211401fb80163b211401fb80162
b211401fb80161b211401fb80160b211401fb8015fb211401fb8015eb211
401fb8015db211401fb8015cb211401fb8015bb211401fb8015ab211401f
b80159b211401fb80158b211401fb80157b211401fb80156b211401fb801
55b211401fb80154b211401fb8012fb211401fb8012eb210421fb8012db2
10421fb8012cb210421fb8012bb210421fb8012ab210421fb80129b21042
1fb80128b210421fb80127b210421fb80126b210421fb80125b20f451fb8
0124b20f451fb80123b20f451fb80105b20f451fb80104b20f451fb80103
b20f451fb80102b20f451fb80101b20e481fb8010040a20e481fff0e481f
fe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c
4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f
8248805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b
7dab7ddb7d067c487a557bab7a55047a147a020a7948775578ab77550b77
010c764875555475e475f4750314755475647574759475d475e47507a475
b475c47503b8ffc0401275383b46807590750214757475020075010fb8ff
c04021750b0e467448725573ab725504723472023bf47201e07201023072
015072607202b8ffc0b372242846b8ffc0403572161a4610723072407203
71486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f0240
6f090d466e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe
000100ef02fe40ff016b032e1f6a03251f692e675568ab6755662e645565
ab6455632e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e58
555703251f562e545555ab5455532e515552ab51554f2e4e554e03251f4d
2e4b554cab4b554a2e485549ab4855504801472e46554503361f001f0100
1e01001e701e801ef01e040b601d701d02701de01df01d03701cf01c027f
1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af1905
0f198f199f19030c7012801202701180110230114011d011e011040011a0
11020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f
0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f
0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c0140
0c262946ef0aff0a02400a242746ef09ff0902ff09010003012001010001
100120010308b8ffc0b301151f46b80100b316010501b80190b154532b2b
4bb807ff524bb008505bb00188b02553b00188b040515ab00688b000555a
5b58b101018e59b101024354b0144b515a58b101018e59858d8d00421d4b
b01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db116004259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b185f5e00>
[6071 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 5754 1005 <00010094000003b00517002e00b5b10102435558400d0929010928010827
0101120130b8ffc040090f024d403001030029b80292b31e180b11b8ffde
b50f024d111312b8017d40092352290f10010b0510b8012bb24006540018
3f1a4ded5f5e5d323ffdcd012f2bcdc433fdcd31305f5d2b005d015d5d5d
1b4018292801292901092901092801082701011201403001031312b8017d
40092352290f10010b0510b8012bb240065400183f1a4ded5f5e5d323ffd
cd3130015f5d005d015d5d5d5d5d5925140e022321222e0235343e023333
11070606262635343e0237253e0333321e02151133321e0203b0060b0e09
fd36080e0b06050b0e09f1d0171d110602080e0c0116050f18271f262f18
08d3090f0b05641c27170a0a17271c1d27180b034a730b05112a26181f16
0e08b40405030103070c09fbd30b1827>HIBBAA+Calibri-Bold AddT42Char 
2 316 38 <0001008dfffa0363050e002700b9b10102435558b10713b8029440160d1d
001e1d07280f014d07180c0d014c07100b014d07ba01570013fff0b60b01
4d13131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119
5500183f3f1a4ded2b2b12392f2bed2b2b2b012f2fc41139ed3231301b40
1107280f014d07180c0d014c07100b014d07ba01570013fff0b60b014d13
131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb4402251195500
183f3f1a4ded2b2b12392f2bed2b2b2b31305901140e0223211121321e02
15140e02232111140e0223222e02351134363321321e020363050b0e09fe
59018d090e0b05050b0e09fe730c1f322726331e0d2d210261090e0b0504
a21e29180cfea40a18281e1e281a0bfe1e0b100b06060b100b04952c270b
192a>HIBBAA+Calibri-Bold AddT42Char 
2 618 68 <0001008dfffa0671050e003c00d9b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
4ded3232323f012fd4ed32113310ed32113311393d2f3333113331301bb5
3651190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c
17101023024c0d101023024c0d172f30312e061f28511f55125505550018
3f3f3f3f1217392b2b2b2b1a4ded3232323f31305925140e0223222e0235
1123010e0323222e0227012311140e0223222e02351134363333321e0217
0133013e033333321e021506710b1d302524301c0c02fe8904121f302222
301f1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f
293825b11b27190d240a100a06060a100a041dfbe40d110a03050b100b04
1cfbe30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b27
1900>HIBBAA+Calibri-Bold AddT42Char 
2 1010 69 <0001008dfffa04b80512003d00b5b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
4ded3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f113311
3331301bb2385229b8fff040120f26024c29282e220c100f26024c0c0b06
0fb8017db7270a19225119552eb8017db240065400183f1a4ded3f3f1239
39ed1139392b111239392b3f31305925140e022323222e02270126262723
16161511140e0223222e02351134363333321e0217131e03173326263511
343e0233321e021504b8101b25137023332b2819febe1c3a170204040b1b
2e24232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e19
0a5c1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b
2f2f0d1e3527fe272b53535028469845025f0a100c05050c100a>HIBBAA+Calibri-Bold AddT42Char 
2 1366 94 <0001003fffe9038c0525004900bbb10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1a4ded2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2f
ed31301bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f01
4c3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1a
4ded2b3f123939ed2b1139392f2f10ed10ed31305901140e0223222e0435
343e0233321e0233323e0235342e0635343e0233321e0615140e0223222e
0223220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49
304c351c304d6268624d3045759f592e5c503e1407050203070d0b0b3046
5c372b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b21
2821172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a
0c1c211b1525341d2b3f312b303d5573>HIBBAA+Calibri-Bold AddT42Char 
2 1742 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>HIBBAA+Calibri-Bold AddT42Char 
2 2214 271 <0002007effe904000570002a003d0096b10102435558b20a2136bb026000
15002b0284400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b46104c39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b46104c39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022715140e0223
222e023511343e0233321e0215113e0333321e0205342e0223220e020711
161633323e02040034628f5b2d4e4745240b192a1e1f29190a0c1d302525
301d0c2244444828638a5728fefb112a4333193033361e35613531442d14
01ec77be864811263a29610b0f0a04040a0f0b05230a100b06060b100afe
1322301f0e4f86b375396a52310e223628fed84447325066>HIBBAA+Calibri-Bold AddT42Char 
2 2538 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>HIBBAA+Calibri-Bold AddT42Char 
2 2946 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>HIBBAA+Calibri-Bold AddT42Char 
2 3470 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>HIBBAA+Calibri-Bold AddT42Char 
2 3640 373 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>HIBBAA+Calibri-Bold AddT42Char 
2 4028 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>HIBBAA+Calibri-Bold AddT42Char 
2 4298 381 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f>HIBBAA+Calibri-Bold AddT42Char 
2 4528 396 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>HIBBAA+Calibri-Bold AddT42Char 
2 4782 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>HIBBAA+Calibri-Bold AddT42Char 
2 5204 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>HIBBAA+Calibri-Bold AddT42Char 
2 5506 437 <00010079ffe903cc03c60032006bb10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1a4ded2b3f1239393f012fedd4ed3931301b400e2d49270b05194924
180b0f014c24b8014db4400e4d054c00183f3f1a4ded2b3f1239393f3130
5925140e0223222e023535060623222e023511343e0233321e021511141e
023332363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d
210b1d312425301d0c122539263061370b1d302525301c0c220a0f0a0505
0a0f0a6750503c68896602220a0f0a05050a0f0afe08464a351d46430251
0a0f0a05050a0f0a>HIBBAA+Calibri-Bold AddT42Char 
2 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>HIBBAA+Calibri-Bold AddT42Char 
HIBBAA+Calibri-Bold /CharStrings get begin
/one 1005 def
/F 38 def
/M 68 def
/N 69 def
/S 94 def
/a 258 def
/b 271 def
/e 286 def
/g 336 def
/i 349 def
/m 373 def
/n 374 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
/u 437 def
end
HIBBAA+Calibri-Bold /Encoding get
dup 49 /one put
dup 70 /F put
dup 77 /M put
dup 78 /N put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/EGRRYY+Calibri-Bold /HIBBAA+Calibri-Bold findfont ct_VMDictPut
/EGRRYY+Calibri-Bold*1 
[49{/.notdef}rp /one 20{/.notdef}rp /F 6{/.notdef}rp /M /N 4{/.notdef}rp 
/S 13{/.notdef}rp /a /b 2{/.notdef}rp /e /.notdef /g 
/.notdef /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r 
/s /t /u 138{/.notdef}rp]
EGRRYY+Calibri-Bold nf
EGRRYY+Calibri-Bold*1 [0 -17.8674 -17.8674 0 0 0 ]msf
107.76 469.32 mo
(F1)
[-8.27975 0 ]ysh
%ADOBeginSubsetFont: QJJAAA+Calibri-Bold-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QJJAAA+Calibri-Bold)
%%Title: (QJJAAA+Calibri-Bold Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QJJAAA+Calibri-Bold def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-519 -306 1240 971} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3874 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F119478
AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D19042FB8B
7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28AEC2A0
702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D929B0
25DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF43A5FA
51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D8D270
BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FFE381E
622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A6E83C
18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF19D085
C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EAE508C
E290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF1599689F
A1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB398CE8A
C4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787220FB
A75DA1E45C945> |
882 <001C60D8A8C9B83844CBA60F1342221E4925C71C3C5CB97BD289538BA77
EF8118DDFDAAAB02E43532889404B9FB9EA15E471AFBA6E91EB16E49B8ABD66D
EFA82CF85E16941D5D19E051392D2E7296E282A5FEC19CBAA1A1222F7009C> |
3 <001C60D8A8C9B888C146> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QJJAAA+Calibri-Bold-Identity-H /Identity-H 0 [/QJJAAA+Calibri-Bold] ct_ComposeFont pop end end
%ADOEndSubsetFont
/EGRRYZ+Calibri-Bold /QJJAAA+Calibri-Bold-Identity-H findfont ct_VMDictPut
EGRRYZ+Calibri-Bold [0 -17.8674 -17.8674 0 0 0 ]msf
107.76 451.92 mo
(\003r)sh
EGRRYY+Calibri-Bold*1 [0 -17.8674 -17.8674 0 0 0 ]msf
107.76 446.401 mo
(Measure)
[-15.5213 -8.99277 -8.73187 -7.03442 -9.72708 -6.23206 0 ]ysh
EGRRYY+Calibri-Bold*1 [17.8674 0 0 -17.8674 0 0 ]msf
218.76 589.44 mo
(SegmentationNumber)
[8.35313 8.88914 8.37085 14.512 8.88913 9.49655 6.10172 8.5264 6.36615 4.44724 9.60721 13.8062 
11.7656 9.72705 14.428 9.72705 8.88916 0 ]xsh
EGRRYZ+Calibri-Bold [17.8674 0 0 -17.8674 0 0 ]msf
387.119 589.44 mo
(\000\003)sh
476.04 427.2 mo
471.6 422.76 li
471.6 427.2 mo
476.04 422.76 li
.713222 .423743 .0417182 0 cmyk
ef
475.68 427.68 mo
471.24 423.24 li
472.08 422.4 li
476.52 426.84 li
cp
471.24 426.84 mo
475.68 422.4 li
476.52 423.24 li
472.08 427.68 li
.728786 .437995 .0408331 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EGRRYX+Calibri gcheck setglobal} if
2 322 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>EGRRYX+Calibri AddT42Char 
2 1520 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>EGRRYX+Calibri AddT42Char 
2 1940 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>EGRRYX+Calibri AddT42Char 
2 2592 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>EGRRYX+Calibri AddT42Char 
2 2914 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>EGRRYX+Calibri AddT42Char 
2 3388 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>EGRRYX+Calibri AddT42Char 
2 3784 455 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e1812>EGRRYX+Calibri AddT42Char 
EGRRYX+Calibri /CharStrings get begin
/B 17 def
/S 94 def
/a 258 def
/e 286 def
/g 336 def
/s 400 def
/y 455 def
end
EGRRYX+Calibri /Encoding get
dup 66 /B put
dup 83 /S put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 115 /s put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EGRRYX+Calibri*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /.notdef /nine 8{/.notdef}rp /B 16{/.notdef}rp 
/S 13{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g 11{/.notdef}rp 
/s 5{/.notdef}rp /y 134{/.notdef}rp]
EGRRYX+Calibri nf
EGRRYX+Calibri*1 [14.8298 0 0 -14.8298 0 0 ]msf
481.56 429.24 mo
(BayesSeg)
[8.05713 7.19992 6.70755 7.44608 5.87863 6.71344 7.56616 0 ]xsh
473.88 449.76 mo
476.04 452.04 li
473.88 454.32 li
471.6 452.04 li
.260136 .804379 .644221 0 cmyk
ef
473.4 449.4 mo
473.64 449.16 474 449.16 474.24 449.4 cv
476.4 451.68 li
476.64 451.92 476.64 452.16 476.4 452.4 cv
474.24 454.68 li
474 454.92 473.64 454.92 473.4 454.68 cv
471.24 452.4 li
471 452.16 471 451.92 471.24 451.68 cv
cp
471.96 452.4 mo
471.96 451.68 li
474.24 453.84 li
473.4 453.84 li
475.68 451.68 li
475.68 452.4 li
473.4 450.24 li
474.24 450.24 li
.26978 .825711 .676448 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal EGRRYX+Calibri gcheck setglobal} if
2 686 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>EGRRYX+Calibri AddT42Char 
2 936 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>EGRRYX+Calibri AddT42Char 
2 1178 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>EGRRYX+Calibri AddT42Char 
2 2290 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>EGRRYX+Calibri AddT42Char 
EGRRYX+Calibri /CharStrings get begin
/C 18 def
/P 87 def
/R 90 def
/d 282 def
end
EGRRYX+Calibri /Encoding get
dup 67 /C put
dup 80 /P put
dup 82 /R put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EGRRYX+Calibri*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /.notdef /nine 8{/.notdef}rp /B /C 
12{/.notdef}rp /P /.notdef /R /S 13{/.notdef}rp /a 2{/.notdef}rp 
/d /e /.notdef /g 11{/.notdef}rp /s 5{/.notdef}rp /y 
134{/.notdef}rp]
EGRRYX+Calibri nf
EGRRYX+Calibri*1 [14.8298 0 0 -14.8298 0 0 ]msf
481.56 456.24 mo
(dd)
[7.91458 0 ]xsh
%ADOBeginSubsetFont: GFNBAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (GFNBAA+Calibri)
%%Title: (GFNBAA+Calibri Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /GFNBAA+Calibri def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-503 -307 1240 964} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 3874 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C6923342525
31335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77A
FB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99
AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AE
A3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816
818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F30
8DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA
0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981
B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A
380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6
BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA
965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885
D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11A
F573B17CF9F38> |
882 <001C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D
629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55C
E7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /GFNBAA+Calibri-Identity-H /Identity-H 0 [/GFNBAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/EGRRZA+Calibri /GFNBAA+Calibri-Identity-H findfont ct_VMDictPut
EGRRZA+Calibri [14.8298 0 0 -14.8298 0 0 ]msf
497.28 456.24 mo
(\003r)sh
EGRRYX+Calibri*1 [14.8298 0 0 -14.8298 0 0 ]msf
501.84 456.24 mo
(CRP)
[8.03635 8.04068 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/EGRRZA+Calibri-Identity-H uf
/EGRRZA+Calibri /CIDFont ur
/EGRRYZ+Calibri-Bold-Identity-H uf
/EGRRYZ+Calibri-Bold /CIDFont ur
/EGRRYY+Calibri-Bold*1 uf
/EGRRYY+Calibri-Bold uf
/HIBBAA+Calibri-Bold uf
/EGRRYX+Calibri*1 uf
/EGRRYX+Calibri uf
/WGJAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
